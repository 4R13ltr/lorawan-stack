// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/picture.proto

package ttnpb

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Picture struct {
	// Embedded picture.
	// Omitted if there are external URLs available (in sizes).
	Embedded *Picture_Embedded `protobuf:"bytes,1,opt,name=embedded,proto3" json:"embedded,omitempty"`
	// URLs of the picture for different sizes, if available on a CDN.
	Sizes                map[uint32]string `protobuf:"bytes,2,rep,name=sizes,proto3" json:"sizes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Picture) Reset()      { *m = Picture{} }
func (*Picture) ProtoMessage() {}
func (*Picture) Descriptor() ([]byte, []int) {
	return fileDescriptor_e379f581972557c1, []int{0}
}
func (m *Picture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Picture.Unmarshal(m, b)
}
func (m *Picture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Picture.Marshal(b, m, deterministic)
}
func (m *Picture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Picture.Merge(m, src)
}
func (m *Picture) XXX_Size() int {
	return xxx_messageInfo_Picture.Size(m)
}
func (m *Picture) XXX_DiscardUnknown() {
	xxx_messageInfo_Picture.DiscardUnknown(m)
}

var xxx_messageInfo_Picture proto.InternalMessageInfo

func (m *Picture) GetEmbedded() *Picture_Embedded {
	if m != nil {
		return m.Embedded
	}
	return nil
}

func (m *Picture) GetSizes() map[uint32]string {
	if m != nil {
		return m.Sizes
	}
	return nil
}

type Picture_Embedded struct {
	// MIME type of the picture.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Picture data. A data URI can be constructed as follows:
	// `data:<mime_type>;base64,<data>`.
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Picture_Embedded) Reset()      { *m = Picture_Embedded{} }
func (*Picture_Embedded) ProtoMessage() {}
func (*Picture_Embedded) Descriptor() ([]byte, []int) {
	return fileDescriptor_e379f581972557c1, []int{0, 0}
}
func (m *Picture_Embedded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Picture_Embedded.Unmarshal(m, b)
}
func (m *Picture_Embedded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Picture_Embedded.Marshal(b, m, deterministic)
}
func (m *Picture_Embedded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Picture_Embedded.Merge(m, src)
}
func (m *Picture_Embedded) XXX_Size() int {
	return xxx_messageInfo_Picture_Embedded.Size(m)
}
func (m *Picture_Embedded) XXX_DiscardUnknown() {
	xxx_messageInfo_Picture_Embedded.DiscardUnknown(m)
}

var xxx_messageInfo_Picture_Embedded proto.InternalMessageInfo

func (m *Picture_Embedded) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Picture_Embedded) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Picture)(nil), "ttn.lorawan.v3.Picture")
	golang_proto.RegisterType((*Picture)(nil), "ttn.lorawan.v3.Picture")
	proto.RegisterMapType((map[uint32]string)(nil), "ttn.lorawan.v3.Picture.SizesEntry")
	golang_proto.RegisterMapType((map[uint32]string)(nil), "ttn.lorawan.v3.Picture.SizesEntry")
	proto.RegisterType((*Picture_Embedded)(nil), "ttn.lorawan.v3.Picture.Embedded")
	golang_proto.RegisterType((*Picture_Embedded)(nil), "ttn.lorawan.v3.Picture.Embedded")
}

func init() { proto.RegisterFile("lorawan-stack/api/picture.proto", fileDescriptor_e379f581972557c1) }
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/picture.proto", fileDescriptor_e379f581972557c1)
}

var fileDescriptor_e379f581972557c1 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3f, 0x8f, 0xd3, 0x30,
	0x00, 0xc5, 0xeb, 0xb4, 0x21, 0xad, 0x8f, 0x43, 0x28, 0x62, 0x88, 0x32, 0x98, 0xe8, 0xc4, 0x50,
	0x21, 0xc5, 0x96, 0xae, 0xcb, 0x09, 0xb1, 0x10, 0xe9, 0xc4, 0x84, 0x74, 0x0a, 0x4c, 0x2c, 0xc8,
	0x49, 0x4c, 0x1a, 0xa5, 0xb1, 0x2d, 0xc7, 0xc9, 0x91, 0x9b, 0xf2, 0x11, 0x3a, 0x23, 0x3e, 0x00,
	0x1f, 0x83, 0x8f, 0xc1, 0x4a, 0xba, 0x30, 0x32, 0x77, 0x42, 0x75, 0xca, 0x9f, 0x0a, 0xb1, 0xbd,
	0x97, 0xfc, 0xde, 0xf3, 0x93, 0x0d, 0x1f, 0x6f, 0x84, 0xa2, 0xb7, 0x94, 0x87, 0xb5, 0xa6, 0x69,
	0x49, 0xa8, 0x2c, 0x88, 0x2c, 0x52, 0xdd, 0x28, 0x86, 0xa5, 0x12, 0x5a, 0xb8, 0x0f, 0xb4, 0xe6,
	0xf8, 0x08, 0xe1, 0x76, 0xe5, 0xbf, 0xc8, 0x0b, 0xbd, 0x6e, 0x12, 0x9c, 0x8a, 0x8a, 0x30, 0xde,
	0x8a, 0x4e, 0x2a, 0xf1, 0xa1, 0x23, 0x06, 0x4e, 0xc3, 0x9c, 0xf1, 0xb0, 0xa5, 0x9b, 0x22, 0xa3,
	0x9a, 0x91, 0x7f, 0xc4, 0x58, 0xe9, 0x87, 0x7f, 0x55, 0xe4, 0x22, 0x17, 0x63, 0x38, 0x69, 0xde,
	0x1b, 0x67, 0x8c, 0x51, 0x23, 0x7e, 0xf1, 0xc9, 0x82, 0xce, 0xcd, 0xb8, 0xc9, 0x7d, 0x0e, 0xe7,
	0xac, 0x4a, 0x58, 0x96, 0xb1, 0xcc, 0x03, 0x01, 0x58, 0x9e, 0x5d, 0x06, 0xf8, 0x74, 0x20, 0x3e,
	0xa2, 0xf8, 0xfa, 0xc8, 0xc5, 0xbf, 0x13, 0xee, 0x4b, 0x68, 0xd7, 0xc5, 0x1d, 0xab, 0x3d, 0x2b,
	0x98, 0x2e, 0xcf, 0x2e, 0x2f, 0xfe, 0x17, 0x7d, 0x7d, 0x80, 0xae, 0xb9, 0x56, 0x5d, 0x74, 0xbe,
	0x8f, 0xe0, 0x47, 0xe0, 0x3c, 0xb5, 0xd5, 0x74, 0x0b, 0x40, 0x3c, 0xe6, 0xfd, 0x1b, 0x38, 0xff,
	0x55, 0xef, 0x3e, 0x81, 0x8b, 0xaa, 0xa8, 0xd8, 0x3b, 0xdd, 0x49, 0x66, 0x36, 0x2d, 0x22, 0x67,
	0x1f, 0xcd, 0x94, 0xe5, 0x05, 0xf1, 0xfc, 0xf0, 0xe7, 0x4d, 0x27, 0x99, 0x8b, 0xe0, 0x2c, 0xa3,
	0x9a, 0x7a, 0x56, 0x00, 0x96, 0xf7, 0x23, 0xb8, 0x8f, 0x9c, 0x3b, 0xdb, 0xeb, 0xfb, 0x7e, 0x16,
	0x9b, 0xef, 0xfe, 0x15, 0x84, 0x7f, 0x4e, 0x75, 0x1f, 0xc2, 0x69, 0xc9, 0x3a, 0xd3, 0x76, 0x1e,
	0x1f, 0xa4, 0xfb, 0x08, 0xda, 0x2d, 0xdd, 0x34, 0xcc, 0x14, 0x2c, 0xe2, 0xd1, 0x3c, 0xb3, 0xae,
	0x40, 0xf4, 0xea, 0xeb, 0x37, 0x34, 0xe9, 0x07, 0x04, 0x3e, 0x0f, 0x08, 0x7c, 0x1f, 0xd0, 0xe4,
	0xc7, 0x80, 0xc0, 0x76, 0x87, 0x26, 0x5f, 0x76, 0x08, 0xbc, 0x25, 0xb9, 0xc0, 0x7a, 0xcd, 0xf4,
	0xba, 0xe0, 0x79, 0x8d, 0x39, 0xd3, 0xb7, 0x42, 0x95, 0xe4, 0xf4, 0xd1, 0xdb, 0x15, 0x91, 0x65,
	0x4e, 0xb4, 0xe6, 0x32, 0x49, 0xee, 0x99, 0x4b, 0x5f, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x9c, 0x2c, 0x92, 0x19, 0x02, 0x00, 0x00,
}

func (this *Picture) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Picture)
	if !ok {
		that2, ok := that.(Picture)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Embedded.Equal(that1.Embedded) {
		return false
	}
	if len(this.Sizes) != len(that1.Sizes) {
		return false
	}
	for i := range this.Sizes {
		if this.Sizes[i] != that1.Sizes[i] {
			return false
		}
	}
	return true
}
func (this *Picture_Embedded) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Picture_Embedded)
	if !ok {
		that2, ok := that.(Picture_Embedded)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MimeType != that1.MimeType {
		return false
	}
	if !bytes.Equal(this.Data, that1.Data) {
		return false
	}
	return true
}
func (this *Picture) String() string {
	if this == nil {
		return "nil"
	}
	keysForSizes := make([]uint32, 0, len(this.Sizes))
	for k := range this.Sizes {
		keysForSizes = append(keysForSizes, k)
	}
	github_com_gogo_protobuf_sortkeys.Uint32s(keysForSizes)
	mapStringForSizes := "map[uint32]string{"
	for _, k := range keysForSizes {
		mapStringForSizes += fmt.Sprintf("%v: %v,", k, this.Sizes[k])
	}
	mapStringForSizes += "}"
	s := strings.Join([]string{`&Picture{`,
		`Embedded:` + strings.Replace(fmt.Sprintf("%v", this.Embedded), "Picture_Embedded", "Picture_Embedded", 1) + `,`,
		`Sizes:` + mapStringForSizes + `,`,
		`}`,
	}, "")
	return s
}
func (this *Picture_Embedded) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Picture_Embedded{`,
		`MimeType:` + fmt.Sprintf("%v", this.MimeType) + `,`,
		`Data:` + fmt.Sprintf("%v", this.Data) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPicture(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
