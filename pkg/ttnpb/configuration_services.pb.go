// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/configuration_services.proto

package ttnpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListFrequencyPlansRequest struct {
	// Optional base frequency in MHz for hardware support (433, 470, 868 or 915)
	BaseFrequency        uint32   `protobuf:"varint,1,opt,name=base_frequency,json=baseFrequency,proto3" json:"base_frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFrequencyPlansRequest) Reset()         { *m = ListFrequencyPlansRequest{} }
func (m *ListFrequencyPlansRequest) String() string { return proto.CompactTextString(m) }
func (*ListFrequencyPlansRequest) ProtoMessage()    {}
func (*ListFrequencyPlansRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{0}
}
func (m *ListFrequencyPlansRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFrequencyPlansRequest.Unmarshal(m, b)
}
func (m *ListFrequencyPlansRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFrequencyPlansRequest.Marshal(b, m, deterministic)
}
func (m *ListFrequencyPlansRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFrequencyPlansRequest.Merge(m, src)
}
func (m *ListFrequencyPlansRequest) XXX_Size() int {
	return xxx_messageInfo_ListFrequencyPlansRequest.Size(m)
}
func (m *ListFrequencyPlansRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFrequencyPlansRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFrequencyPlansRequest proto.InternalMessageInfo

func (m *ListFrequencyPlansRequest) GetBaseFrequency() uint32 {
	if m != nil {
		return m.BaseFrequency
	}
	return 0
}

type FrequencyPlanDescription struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the frequency that the current frequency plan is based on.
	BaseId string `protobuf:"bytes,2,opt,name=base_id,json=baseId,proto3" json:"base_id,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Base frequency in MHz for hardware support (433, 470, 868 or 915)
	BaseFrequency        uint32   `protobuf:"varint,4,opt,name=base_frequency,json=baseFrequency,proto3" json:"base_frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrequencyPlanDescription) Reset()         { *m = FrequencyPlanDescription{} }
func (m *FrequencyPlanDescription) String() string { return proto.CompactTextString(m) }
func (*FrequencyPlanDescription) ProtoMessage()    {}
func (*FrequencyPlanDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{1}
}
func (m *FrequencyPlanDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyPlanDescription.Unmarshal(m, b)
}
func (m *FrequencyPlanDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyPlanDescription.Marshal(b, m, deterministic)
}
func (m *FrequencyPlanDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyPlanDescription.Merge(m, src)
}
func (m *FrequencyPlanDescription) XXX_Size() int {
	return xxx_messageInfo_FrequencyPlanDescription.Size(m)
}
func (m *FrequencyPlanDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyPlanDescription.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyPlanDescription proto.InternalMessageInfo

func (m *FrequencyPlanDescription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FrequencyPlanDescription) GetBaseId() string {
	if m != nil {
		return m.BaseId
	}
	return ""
}

func (m *FrequencyPlanDescription) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FrequencyPlanDescription) GetBaseFrequency() uint32 {
	if m != nil {
		return m.BaseFrequency
	}
	return 0
}

type ListFrequencyPlansResponse struct {
	FrequencyPlans       []*FrequencyPlanDescription `protobuf:"bytes,1,rep,name=frequency_plans,json=frequencyPlans,proto3" json:"frequency_plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListFrequencyPlansResponse) Reset()         { *m = ListFrequencyPlansResponse{} }
func (m *ListFrequencyPlansResponse) String() string { return proto.CompactTextString(m) }
func (*ListFrequencyPlansResponse) ProtoMessage()    {}
func (*ListFrequencyPlansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{2}
}
func (m *ListFrequencyPlansResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFrequencyPlansResponse.Unmarshal(m, b)
}
func (m *ListFrequencyPlansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFrequencyPlansResponse.Marshal(b, m, deterministic)
}
func (m *ListFrequencyPlansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFrequencyPlansResponse.Merge(m, src)
}
func (m *ListFrequencyPlansResponse) XXX_Size() int {
	return xxx_messageInfo_ListFrequencyPlansResponse.Size(m)
}
func (m *ListFrequencyPlansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFrequencyPlansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFrequencyPlansResponse proto.InternalMessageInfo

func (m *ListFrequencyPlansResponse) GetFrequencyPlans() []*FrequencyPlanDescription {
	if m != nil {
		return m.FrequencyPlans
	}
	return nil
}

type GetPhyVersionsRequest struct {
	// Optional Band ID to filter the results.
	// If unused, all supported Bands and their versions are returned.
	BandId               string   `protobuf:"bytes,1,opt,name=band_id,json=bandId,proto3" json:"band_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPhyVersionsRequest) Reset()         { *m = GetPhyVersionsRequest{} }
func (m *GetPhyVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPhyVersionsRequest) ProtoMessage()    {}
func (*GetPhyVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{3}
}
func (m *GetPhyVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhyVersionsRequest.Unmarshal(m, b)
}
func (m *GetPhyVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhyVersionsRequest.Marshal(b, m, deterministic)
}
func (m *GetPhyVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhyVersionsRequest.Merge(m, src)
}
func (m *GetPhyVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPhyVersionsRequest.Size(m)
}
func (m *GetPhyVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhyVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhyVersionsRequest proto.InternalMessageInfo

func (m *GetPhyVersionsRequest) GetBandId() string {
	if m != nil {
		return m.BandId
	}
	return ""
}

type GetPhyVersionsResponse struct {
	VersionInfo          []*GetPhyVersionsResponse_VersionInfo `protobuf:"bytes,2,rep,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *GetPhyVersionsResponse) Reset()         { *m = GetPhyVersionsResponse{} }
func (m *GetPhyVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPhyVersionsResponse) ProtoMessage()    {}
func (*GetPhyVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{4}
}
func (m *GetPhyVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhyVersionsResponse.Unmarshal(m, b)
}
func (m *GetPhyVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhyVersionsResponse.Marshal(b, m, deterministic)
}
func (m *GetPhyVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhyVersionsResponse.Merge(m, src)
}
func (m *GetPhyVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPhyVersionsResponse.Size(m)
}
func (m *GetPhyVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhyVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhyVersionsResponse proto.InternalMessageInfo

func (m *GetPhyVersionsResponse) GetVersionInfo() []*GetPhyVersionsResponse_VersionInfo {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

type GetPhyVersionsResponse_VersionInfo struct {
	BandId               string       `protobuf:"bytes,1,opt,name=band_id,json=bandId,proto3" json:"band_id,omitempty"`
	PhyVersions          []PHYVersion `protobuf:"varint,2,rep,packed,name=phy_versions,json=phyVersions,proto3,enum=ttn.lorawan.v3.PHYVersion" json:"phy_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetPhyVersionsResponse_VersionInfo) Reset()         { *m = GetPhyVersionsResponse_VersionInfo{} }
func (m *GetPhyVersionsResponse_VersionInfo) String() string { return proto.CompactTextString(m) }
func (*GetPhyVersionsResponse_VersionInfo) ProtoMessage()    {}
func (*GetPhyVersionsResponse_VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ed64f51a0283877, []int{4, 0}
}
func (m *GetPhyVersionsResponse_VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhyVersionsResponse_VersionInfo.Unmarshal(m, b)
}
func (m *GetPhyVersionsResponse_VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhyVersionsResponse_VersionInfo.Marshal(b, m, deterministic)
}
func (m *GetPhyVersionsResponse_VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhyVersionsResponse_VersionInfo.Merge(m, src)
}
func (m *GetPhyVersionsResponse_VersionInfo) XXX_Size() int {
	return xxx_messageInfo_GetPhyVersionsResponse_VersionInfo.Size(m)
}
func (m *GetPhyVersionsResponse_VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhyVersionsResponse_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhyVersionsResponse_VersionInfo proto.InternalMessageInfo

func (m *GetPhyVersionsResponse_VersionInfo) GetBandId() string {
	if m != nil {
		return m.BandId
	}
	return ""
}

func (m *GetPhyVersionsResponse_VersionInfo) GetPhyVersions() []PHYVersion {
	if m != nil {
		return m.PhyVersions
	}
	return nil
}

func init() {
	proto.RegisterType((*ListFrequencyPlansRequest)(nil), "ttn.lorawan.v3.ListFrequencyPlansRequest")
	golang_proto.RegisterType((*ListFrequencyPlansRequest)(nil), "ttn.lorawan.v3.ListFrequencyPlansRequest")
	proto.RegisterType((*FrequencyPlanDescription)(nil), "ttn.lorawan.v3.FrequencyPlanDescription")
	golang_proto.RegisterType((*FrequencyPlanDescription)(nil), "ttn.lorawan.v3.FrequencyPlanDescription")
	proto.RegisterType((*ListFrequencyPlansResponse)(nil), "ttn.lorawan.v3.ListFrequencyPlansResponse")
	golang_proto.RegisterType((*ListFrequencyPlansResponse)(nil), "ttn.lorawan.v3.ListFrequencyPlansResponse")
	proto.RegisterType((*GetPhyVersionsRequest)(nil), "ttn.lorawan.v3.GetPhyVersionsRequest")
	golang_proto.RegisterType((*GetPhyVersionsRequest)(nil), "ttn.lorawan.v3.GetPhyVersionsRequest")
	proto.RegisterType((*GetPhyVersionsResponse)(nil), "ttn.lorawan.v3.GetPhyVersionsResponse")
	golang_proto.RegisterType((*GetPhyVersionsResponse)(nil), "ttn.lorawan.v3.GetPhyVersionsResponse")
	proto.RegisterType((*GetPhyVersionsResponse_VersionInfo)(nil), "ttn.lorawan.v3.GetPhyVersionsResponse.VersionInfo")
	golang_proto.RegisterType((*GetPhyVersionsResponse_VersionInfo)(nil), "ttn.lorawan.v3.GetPhyVersionsResponse.VersionInfo")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/configuration_services.proto", fileDescriptor_2ed64f51a0283877)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/configuration_services.proto", fileDescriptor_2ed64f51a0283877)
}

var fileDescriptor_2ed64f51a0283877 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x6e, 0x15, 0xc4, 0xa6, 0x31, 0xd2, 0x4a, 0x80, 0x31, 0x10, 0x22, 0xa3, 0x56, 0x01,
	0x29, 0x36, 0x4a, 0xce, 0xbd, 0x14, 0x04, 0x44, 0xe2, 0x10, 0x2c, 0x81, 0x04, 0x17, 0xcb, 0xb1,
	0xd7, 0xf6, 0x2a, 0xe9, 0xee, 0xe2, 0xdd, 0xb8, 0xca, 0x85, 0x03, 0xe2, 0x0f, 0xfa, 0x1b, 0x7c,
	0x04, 0xff, 0x80, 0xc4, 0x07, 0x14, 0x0e, 0x1c, 0xf9, 0x04, 0xe4, 0x89, 0x9d, 0xd6, 0x6e, 0xa2,
	0xf6, 0xb6, 0x33, 0xbb, 0x6f, 0xde, 0x9b, 0x37, 0x3b, 0xc8, 0x99, 0xf3, 0x2c, 0x38, 0x09, 0xd8,
	0x40, 0xaa, 0x20, 0x9c, 0xb9, 0x81, 0xa0, 0x6e, 0xc8, 0x59, 0x4c, 0x93, 0x45, 0x16, 0x28, 0xca,
	0x99, 0x2f, 0x49, 0x96, 0xd3, 0x90, 0x48, 0x47, 0x64, 0x5c, 0x71, 0x6c, 0x28, 0xc5, 0x2a, 0x8c,
	0x93, 0x8f, 0xac, 0x41, 0x42, 0x55, 0xba, 0x98, 0x3a, 0x21, 0x3f, 0x76, 0x13, 0x9e, 0x70, 0x17,
	0x9e, 0x4d, 0x17, 0x31, 0x44, 0x10, 0xc0, 0x69, 0x05, 0xb7, 0x1e, 0x26, 0x9c, 0x27, 0x73, 0x02,
	0x3c, 0x01, 0x63, 0x5c, 0x01, 0x49, 0x59, 0xdc, 0x7a, 0x7c, 0x59, 0x4c, 0x45, 0x05, 0x0f, 0xec,
	0x23, 0x74, 0xff, 0x2d, 0x95, 0xea, 0x55, 0x46, 0x3e, 0x2f, 0x08, 0x0b, 0x97, 0x93, 0x79, 0xc0,
	0xa4, 0x57, 0x04, 0x52, 0xe1, 0x7d, 0x64, 0x4c, 0x03, 0x49, 0xfc, 0xb8, 0xba, 0x35, 0xb5, 0x9e,
	0xd6, 0xef, 0x78, 0x9d, 0x22, 0xbb, 0x86, 0xd8, 0x5f, 0x90, 0x59, 0xc3, 0xbf, 0x24, 0x32, 0xcc,
	0xa8, 0x28, 0x74, 0x60, 0x03, 0xe9, 0x34, 0x02, 0xd8, 0x2d, 0x4f, 0xa7, 0x11, 0xbe, 0x87, 0x6e,
	0x42, 0x49, 0x1a, 0x99, 0x3a, 0x24, 0x5b, 0x45, 0x38, 0x8e, 0x30, 0x46, 0xbb, 0x2c, 0x38, 0x26,
	0xe6, 0x0e, 0x64, 0xe1, 0xbc, 0x81, 0x7f, 0x77, 0x13, 0x3f, 0x47, 0xd6, 0xa6, 0x1e, 0xa4, 0xe0,
	0x4c, 0x12, 0xfc, 0x0e, 0xdd, 0x5e, 0xe3, 0x7d, 0x51, 0x5c, 0x99, 0x5a, 0x6f, 0xa7, 0xdf, 0x1e,
	0xf6, 0x9d, 0xba, 0xf3, 0xce, 0xb6, 0x26, 0x3c, 0x23, 0xae, 0x95, 0xb6, 0x9f, 0xa3, 0x3b, 0xaf,
	0x89, 0x9a, 0xa4, 0xcb, 0x0f, 0x24, 0x93, 0x85, 0xdb, 0x95, 0x61, 0xd0, 0x1d, 0x8b, 0xfc, 0x75,
	0xcb, 0xad, 0x22, 0x1c, 0x47, 0xf6, 0x2f, 0x0d, 0xdd, 0x6d, 0x42, 0x4a, 0x7d, 0xef, 0xd1, 0x5e,
	0xbe, 0xca, 0xf9, 0x94, 0xc5, 0xdc, 0xd4, 0x41, 0xdc, 0xb0, 0x29, 0x6e, 0x33, 0xda, 0x29, 0x13,
	0x63, 0x16, 0x73, 0xaf, 0x9d, 0x9f, 0x07, 0x16, 0x41, 0xed, 0x0b, 0x77, 0x5b, 0x95, 0xe1, 0x43,
	0xb4, 0x27, 0xd2, 0xa5, 0x5f, 0x42, 0x25, 0xd0, 0x1b, 0x43, 0xab, 0x49, 0x3f, 0x79, 0xf3, 0xb1,
	0x2c, 0xe7, 0xb5, 0xc5, 0xb9, 0x8e, 0xe1, 0x77, 0x1d, 0x75, 0x5e, 0x5c, 0xfc, 0xde, 0xf8, 0x54,
	0x43, 0xf8, 0xf2, 0x38, 0xf0, 0xd3, 0x66, 0xc5, 0xad, 0xdf, 0xce, 0x7a, 0x76, 0x9d, 0xa7, 0xab,
	0xfe, 0xed, 0x83, 0xaf, 0x3f, 0xff, 0x9c, 0xea, 0x3d, 0xdc, 0xad, 0x2f, 0x99, 0xbb, 0x9e, 0xd8,
	0x00, 0x46, 0x8e, 0xbf, 0x69, 0xc8, 0xa8, 0x5b, 0x88, 0xf7, 0xaf, 0xb2, 0x78, 0xa5, 0xe6, 0xe0,
	0x7a, 0x93, 0xb0, 0x9f, 0x80, 0x92, 0x47, 0xf8, 0x41, 0x43, 0x89, 0x48, 0x97, 0x83, 0xca, 0xdd,
	0xa3, 0xc3, 0xbf, 0x67, 0xdd, 0x1b, 0xff, 0xce, 0xba, 0xda, 0x8f, 0xdf, 0x5d, 0xed, 0x93, 0x9b,
	0x70, 0x47, 0xa5, 0x44, 0xa5, 0x94, 0x25, 0xd2, 0x61, 0x44, 0x9d, 0xf0, 0x6c, 0xe6, 0xd6, 0x57,
	0x36, 0x1f, 0xb9, 0x62, 0x96, 0xb8, 0x4a, 0x31, 0x31, 0x9d, 0xb6, 0x60, 0x69, 0x47, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x32, 0xa3, 0x46, 0x6c, 0x64, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	ListFrequencyPlans(ctx context.Context, in *ListFrequencyPlansRequest, opts ...grpc.CallOption) (*ListFrequencyPlansResponse, error)
	// Returns a list of supported LoRaWAN PHY Versions for the given Band ID.
	GetPhyVersions(ctx context.Context, in *GetPhyVersionsRequest, opts ...grpc.CallOption) (*GetPhyVersionsResponse, error)
}

type configurationClient struct {
	cc *grpc.ClientConn
}

func NewConfigurationClient(cc *grpc.ClientConn) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) ListFrequencyPlans(ctx context.Context, in *ListFrequencyPlansRequest, opts ...grpc.CallOption) (*ListFrequencyPlansResponse, error) {
	out := new(ListFrequencyPlansResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.Configuration/ListFrequencyPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) GetPhyVersions(ctx context.Context, in *GetPhyVersionsRequest, opts ...grpc.CallOption) (*GetPhyVersionsResponse, error) {
	out := new(GetPhyVersionsResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.Configuration/GetPhyVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	ListFrequencyPlans(context.Context, *ListFrequencyPlansRequest) (*ListFrequencyPlansResponse, error)
	// Returns a list of supported LoRaWAN PHY Versions for the given Band ID.
	GetPhyVersions(context.Context, *GetPhyVersionsRequest) (*GetPhyVersionsResponse, error)
}

// UnimplementedConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedConfigurationServer struct {
}

func (*UnimplementedConfigurationServer) ListFrequencyPlans(ctx context.Context, req *ListFrequencyPlansRequest) (*ListFrequencyPlansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFrequencyPlans not implemented")
}
func (*UnimplementedConfigurationServer) GetPhyVersions(ctx context.Context, req *GetPhyVersionsRequest) (*GetPhyVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhyVersions not implemented")
}

func RegisterConfigurationServer(s *grpc.Server, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_ListFrequencyPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFrequencyPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).ListFrequencyPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.Configuration/ListFrequencyPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).ListFrequencyPlans(ctx, req.(*ListFrequencyPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_GetPhyVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhyVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).GetPhyVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.Configuration/GetPhyVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).GetPhyVersions(ctx, req.(*GetPhyVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFrequencyPlans",
			Handler:    _Configuration_ListFrequencyPlans_Handler,
		},
		{
			MethodName: "GetPhyVersions",
			Handler:    _Configuration_GetPhyVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/configuration_services.proto",
}
