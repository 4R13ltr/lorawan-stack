// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/identityserver.proto

package ttnpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AuthInfoResponse struct {
	// Types that are valid to be assigned to AccessMethod:
	//	*AuthInfoResponse_APIKey
	//	*AuthInfoResponse_OAuthAccessToken
	//	*AuthInfoResponse_UserSession
	AccessMethod         isAuthInfoResponse_AccessMethod `protobuf_oneof:"access_method"`
	UniversalRights      *Rights                         `protobuf:"bytes,3,opt,name=universal_rights,json=universalRights,proto3" json:"universal_rights,omitempty"`
	IsAdmin              bool                            `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *AuthInfoResponse) Reset()      { *m = AuthInfoResponse{} }
func (*AuthInfoResponse) ProtoMessage() {}
func (*AuthInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{0}
}
func (m *AuthInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthInfoResponse.Merge(m, src)
}
func (m *AuthInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *AuthInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthInfoResponse proto.InternalMessageInfo

type isAuthInfoResponse_AccessMethod interface {
	isAuthInfoResponse_AccessMethod()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AuthInfoResponse_APIKey struct {
	APIKey *AuthInfoResponse_APIKeyAccess `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3,oneof" json:"api_key,omitempty"`
}
type AuthInfoResponse_OAuthAccessToken struct {
	OAuthAccessToken *OAuthAccessToken `protobuf:"bytes,2,opt,name=oauth_access_token,json=oauthAccessToken,proto3,oneof" json:"oauth_access_token,omitempty"`
}
type AuthInfoResponse_UserSession struct {
	UserSession *UserSession `protobuf:"bytes,5,opt,name=user_session,json=userSession,proto3,oneof" json:"user_session,omitempty"`
}

func (*AuthInfoResponse_APIKey) isAuthInfoResponse_AccessMethod()           {}
func (*AuthInfoResponse_OAuthAccessToken) isAuthInfoResponse_AccessMethod() {}
func (*AuthInfoResponse_UserSession) isAuthInfoResponse_AccessMethod()      {}

func (m *AuthInfoResponse) GetAccessMethod() isAuthInfoResponse_AccessMethod {
	if m != nil {
		return m.AccessMethod
	}
	return nil
}

func (m *AuthInfoResponse) GetAPIKey() *AuthInfoResponse_APIKeyAccess {
	if x, ok := m.GetAccessMethod().(*AuthInfoResponse_APIKey); ok {
		return x.APIKey
	}
	return nil
}

func (m *AuthInfoResponse) GetOAuthAccessToken() *OAuthAccessToken {
	if x, ok := m.GetAccessMethod().(*AuthInfoResponse_OAuthAccessToken); ok {
		return x.OAuthAccessToken
	}
	return nil
}

func (m *AuthInfoResponse) GetUserSession() *UserSession {
	if x, ok := m.GetAccessMethod().(*AuthInfoResponse_UserSession); ok {
		return x.UserSession
	}
	return nil
}

func (m *AuthInfoResponse) GetUniversalRights() *Rights {
	if m != nil {
		return m.UniversalRights
	}
	return nil
}

func (m *AuthInfoResponse) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AuthInfoResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AuthInfoResponse_APIKey)(nil),
		(*AuthInfoResponse_OAuthAccessToken)(nil),
		(*AuthInfoResponse_UserSession)(nil),
	}
}

type AuthInfoResponse_APIKeyAccess struct {
	APIKey               `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3,embedded=api_key" json:"api_key"`
	EntityIDs            EntityIdentifiers `protobuf:"bytes,2,opt,name=entity_ids,json=entityIds,proto3" json:"entity_ids"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AuthInfoResponse_APIKeyAccess) Reset()      { *m = AuthInfoResponse_APIKeyAccess{} }
func (*AuthInfoResponse_APIKeyAccess) ProtoMessage() {}
func (*AuthInfoResponse_APIKeyAccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{0, 0}
}
func (m *AuthInfoResponse_APIKeyAccess) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthInfoResponse_APIKeyAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthInfoResponse_APIKeyAccess.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthInfoResponse_APIKeyAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthInfoResponse_APIKeyAccess.Merge(m, src)
}
func (m *AuthInfoResponse_APIKeyAccess) XXX_Size() int {
	return m.Size()
}
func (m *AuthInfoResponse_APIKeyAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthInfoResponse_APIKeyAccess.DiscardUnknown(m)
}

var xxx_messageInfo_AuthInfoResponse_APIKeyAccess proto.InternalMessageInfo

func (m *AuthInfoResponse_APIKeyAccess) GetEntityIDs() EntityIdentifiers {
	if m != nil {
		return m.EntityIDs
	}
	return EntityIdentifiers{}
}

type GetIsConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIsConfigurationRequest) Reset()      { *m = GetIsConfigurationRequest{} }
func (*GetIsConfigurationRequest) ProtoMessage() {}
func (*GetIsConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{1}
}
func (m *GetIsConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIsConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIsConfigurationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIsConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIsConfigurationRequest.Merge(m, src)
}
func (m *GetIsConfigurationRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetIsConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIsConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIsConfigurationRequest proto.InternalMessageInfo

type IsConfiguration struct {
	UserRegistration     *IsConfiguration_UserRegistration `protobuf:"bytes,3,opt,name=user_registration,json=userRegistration,proto3" json:"user_registration,omitempty"`
	ProfilePicture       *IsConfiguration_ProfilePicture   `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	EndDevicePicture     *IsConfiguration_EndDevicePicture `protobuf:"bytes,5,opt,name=end_device_picture,json=endDevicePicture,proto3" json:"end_device_picture,omitempty"`
	UserRights           *IsConfiguration_UserRights       `protobuf:"bytes,6,opt,name=user_rights,json=userRights,proto3" json:"user_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *IsConfiguration) Reset()      { *m = IsConfiguration{} }
func (*IsConfiguration) ProtoMessage() {}
func (*IsConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2}
}
func (m *IsConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration.Merge(m, src)
}
func (m *IsConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration proto.InternalMessageInfo

func (m *IsConfiguration) GetUserRegistration() *IsConfiguration_UserRegistration {
	if m != nil {
		return m.UserRegistration
	}
	return nil
}

func (m *IsConfiguration) GetProfilePicture() *IsConfiguration_ProfilePicture {
	if m != nil {
		return m.ProfilePicture
	}
	return nil
}

func (m *IsConfiguration) GetEndDevicePicture() *IsConfiguration_EndDevicePicture {
	if m != nil {
		return m.EndDevicePicture
	}
	return nil
}

func (m *IsConfiguration) GetUserRights() *IsConfiguration_UserRights {
	if m != nil {
		return m.UserRights
	}
	return nil
}

type IsConfiguration_UserRegistration struct {
	Invitation            *IsConfiguration_UserRegistration_Invitation            `protobuf:"bytes,1,opt,name=invitation,proto3" json:"invitation,omitempty"`
	ContactInfoValidation *IsConfiguration_UserRegistration_ContactInfoValidation `protobuf:"bytes,2,opt,name=contact_info_validation,json=contactInfoValidation,proto3" json:"contact_info_validation,omitempty"`
	AdminApproval         *IsConfiguration_UserRegistration_AdminApproval         `protobuf:"bytes,3,opt,name=admin_approval,json=adminApproval,proto3" json:"admin_approval,omitempty"`
	PasswordRequirements  *IsConfiguration_UserRegistration_PasswordRequirements  `protobuf:"bytes,4,opt,name=password_requirements,json=passwordRequirements,proto3" json:"password_requirements,omitempty"`
	Enabled               bool                                                    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                                `json:"-"`
	XXX_sizecache         int32                                                   `json:"-"`
}

func (m *IsConfiguration_UserRegistration) Reset()      { *m = IsConfiguration_UserRegistration{} }
func (*IsConfiguration_UserRegistration) ProtoMessage() {}
func (*IsConfiguration_UserRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 0}
}
func (m *IsConfiguration_UserRegistration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRegistration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRegistration.Merge(m, src)
}
func (m *IsConfiguration_UserRegistration) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRegistration proto.InternalMessageInfo

func (m *IsConfiguration_UserRegistration) GetInvitation() *IsConfiguration_UserRegistration_Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *IsConfiguration_UserRegistration) GetContactInfoValidation() *IsConfiguration_UserRegistration_ContactInfoValidation {
	if m != nil {
		return m.ContactInfoValidation
	}
	return nil
}

func (m *IsConfiguration_UserRegistration) GetAdminApproval() *IsConfiguration_UserRegistration_AdminApproval {
	if m != nil {
		return m.AdminApproval
	}
	return nil
}

func (m *IsConfiguration_UserRegistration) GetPasswordRequirements() *IsConfiguration_UserRegistration_PasswordRequirements {
	if m != nil {
		return m.PasswordRequirements
	}
	return nil
}

func (m *IsConfiguration_UserRegistration) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type IsConfiguration_UserRegistration_Invitation struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	TokenTTL             *time.Duration   `protobuf:"bytes,2,opt,name=token_ttl,json=tokenTtl,proto3,stdduration" json:"token_ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_UserRegistration_Invitation) Reset() {
	*m = IsConfiguration_UserRegistration_Invitation{}
}
func (*IsConfiguration_UserRegistration_Invitation) ProtoMessage() {}
func (*IsConfiguration_UserRegistration_Invitation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 0, 0}
}
func (m *IsConfiguration_UserRegistration_Invitation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRegistration_Invitation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRegistration_Invitation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRegistration_Invitation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRegistration_Invitation.Merge(m, src)
}
func (m *IsConfiguration_UserRegistration_Invitation) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRegistration_Invitation) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRegistration_Invitation.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRegistration_Invitation proto.InternalMessageInfo

func (m *IsConfiguration_UserRegistration_Invitation) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *IsConfiguration_UserRegistration_Invitation) GetTokenTTL() *time.Duration {
	if m != nil {
		return m.TokenTTL
	}
	return nil
}

type IsConfiguration_UserRegistration_ContactInfoValidation struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) Reset() {
	*m = IsConfiguration_UserRegistration_ContactInfoValidation{}
}
func (*IsConfiguration_UserRegistration_ContactInfoValidation) ProtoMessage() {}
func (*IsConfiguration_UserRegistration_ContactInfoValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 0, 1}
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRegistration_ContactInfoValidation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRegistration_ContactInfoValidation.Merge(m, src)
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRegistration_ContactInfoValidation.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRegistration_ContactInfoValidation proto.InternalMessageInfo

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

type IsConfiguration_UserRegistration_AdminApproval struct {
	Required             *types.BoolValue `protobuf:"bytes,1,opt,name=required,proto3" json:"required,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_UserRegistration_AdminApproval) Reset() {
	*m = IsConfiguration_UserRegistration_AdminApproval{}
}
func (*IsConfiguration_UserRegistration_AdminApproval) ProtoMessage() {}
func (*IsConfiguration_UserRegistration_AdminApproval) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 0, 2}
}
func (m *IsConfiguration_UserRegistration_AdminApproval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRegistration_AdminApproval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRegistration_AdminApproval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRegistration_AdminApproval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRegistration_AdminApproval.Merge(m, src)
}
func (m *IsConfiguration_UserRegistration_AdminApproval) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRegistration_AdminApproval) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRegistration_AdminApproval.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRegistration_AdminApproval proto.InternalMessageInfo

func (m *IsConfiguration_UserRegistration_AdminApproval) GetRequired() *types.BoolValue {
	if m != nil {
		return m.Required
	}
	return nil
}

type IsConfiguration_UserRegistration_PasswordRequirements struct {
	MinLength            *types.UInt32Value `protobuf:"bytes,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength            *types.UInt32Value `protobuf:"bytes,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	MinUppercase         *types.UInt32Value `protobuf:"bytes,3,opt,name=min_uppercase,json=minUppercase,proto3" json:"min_uppercase,omitempty"`
	MinDigits            *types.UInt32Value `protobuf:"bytes,4,opt,name=min_digits,json=minDigits,proto3" json:"min_digits,omitempty"`
	MinSpecial           *types.UInt32Value `protobuf:"bytes,5,opt,name=min_special,json=minSpecial,proto3" json:"min_special,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) Reset() {
	*m = IsConfiguration_UserRegistration_PasswordRequirements{}
}
func (*IsConfiguration_UserRegistration_PasswordRequirements) ProtoMessage() {}
func (*IsConfiguration_UserRegistration_PasswordRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 0, 3}
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRegistration_PasswordRequirements.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRegistration_PasswordRequirements.Merge(m, src)
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRegistration_PasswordRequirements.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRegistration_PasswordRequirements proto.InternalMessageInfo

func (m *IsConfiguration_UserRegistration_PasswordRequirements) GetMinLength() *types.UInt32Value {
	if m != nil {
		return m.MinLength
	}
	return nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) GetMaxLength() *types.UInt32Value {
	if m != nil {
		return m.MaxLength
	}
	return nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) GetMinUppercase() *types.UInt32Value {
	if m != nil {
		return m.MinUppercase
	}
	return nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) GetMinDigits() *types.UInt32Value {
	if m != nil {
		return m.MinDigits
	}
	return nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) GetMinSpecial() *types.UInt32Value {
	if m != nil {
		return m.MinSpecial
	}
	return nil
}

type IsConfiguration_ProfilePicture struct {
	DisableUpload        *types.BoolValue `protobuf:"bytes,1,opt,name=disable_upload,json=disableUpload,proto3" json:"disable_upload,omitempty"`
	UseGravatar          *types.BoolValue `protobuf:"bytes,2,opt,name=use_gravatar,json=useGravatar,proto3" json:"use_gravatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_ProfilePicture) Reset()      { *m = IsConfiguration_ProfilePicture{} }
func (*IsConfiguration_ProfilePicture) ProtoMessage() {}
func (*IsConfiguration_ProfilePicture) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 1}
}
func (m *IsConfiguration_ProfilePicture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_ProfilePicture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_ProfilePicture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_ProfilePicture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_ProfilePicture.Merge(m, src)
}
func (m *IsConfiguration_ProfilePicture) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_ProfilePicture) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_ProfilePicture.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_ProfilePicture proto.InternalMessageInfo

func (m *IsConfiguration_ProfilePicture) GetDisableUpload() *types.BoolValue {
	if m != nil {
		return m.DisableUpload
	}
	return nil
}

func (m *IsConfiguration_ProfilePicture) GetUseGravatar() *types.BoolValue {
	if m != nil {
		return m.UseGravatar
	}
	return nil
}

type IsConfiguration_EndDevicePicture struct {
	DisableUpload        *types.BoolValue `protobuf:"bytes,1,opt,name=disable_upload,json=disableUpload,proto3" json:"disable_upload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_EndDevicePicture) Reset()      { *m = IsConfiguration_EndDevicePicture{} }
func (*IsConfiguration_EndDevicePicture) ProtoMessage() {}
func (*IsConfiguration_EndDevicePicture) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 2}
}
func (m *IsConfiguration_EndDevicePicture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_EndDevicePicture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_EndDevicePicture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_EndDevicePicture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_EndDevicePicture.Merge(m, src)
}
func (m *IsConfiguration_EndDevicePicture) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_EndDevicePicture) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_EndDevicePicture.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_EndDevicePicture proto.InternalMessageInfo

func (m *IsConfiguration_EndDevicePicture) GetDisableUpload() *types.BoolValue {
	if m != nil {
		return m.DisableUpload
	}
	return nil
}

type IsConfiguration_UserRights struct {
	CreateApplications   *types.BoolValue `protobuf:"bytes,1,opt,name=create_applications,json=createApplications,proto3" json:"create_applications,omitempty"`
	CreateClients        *types.BoolValue `protobuf:"bytes,2,opt,name=create_clients,json=createClients,proto3" json:"create_clients,omitempty"`
	CreateGateways       *types.BoolValue `protobuf:"bytes,3,opt,name=create_gateways,json=createGateways,proto3" json:"create_gateways,omitempty"`
	CreateOrganizations  *types.BoolValue `protobuf:"bytes,4,opt,name=create_organizations,json=createOrganizations,proto3" json:"create_organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IsConfiguration_UserRights) Reset()      { *m = IsConfiguration_UserRights{} }
func (*IsConfiguration_UserRights) ProtoMessage() {}
func (*IsConfiguration_UserRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{2, 3}
}
func (m *IsConfiguration_UserRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IsConfiguration_UserRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IsConfiguration_UserRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IsConfiguration_UserRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsConfiguration_UserRights.Merge(m, src)
}
func (m *IsConfiguration_UserRights) XXX_Size() int {
	return m.Size()
}
func (m *IsConfiguration_UserRights) XXX_DiscardUnknown() {
	xxx_messageInfo_IsConfiguration_UserRights.DiscardUnknown(m)
}

var xxx_messageInfo_IsConfiguration_UserRights proto.InternalMessageInfo

func (m *IsConfiguration_UserRights) GetCreateApplications() *types.BoolValue {
	if m != nil {
		return m.CreateApplications
	}
	return nil
}

func (m *IsConfiguration_UserRights) GetCreateClients() *types.BoolValue {
	if m != nil {
		return m.CreateClients
	}
	return nil
}

func (m *IsConfiguration_UserRights) GetCreateGateways() *types.BoolValue {
	if m != nil {
		return m.CreateGateways
	}
	return nil
}

func (m *IsConfiguration_UserRights) GetCreateOrganizations() *types.BoolValue {
	if m != nil {
		return m.CreateOrganizations
	}
	return nil
}

type GetIsConfigurationResponse struct {
	Configuration        *IsConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetIsConfigurationResponse) Reset()      { *m = GetIsConfigurationResponse{} }
func (*GetIsConfigurationResponse) ProtoMessage() {}
func (*GetIsConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1c7e02f6181562c, []int{3}
}
func (m *GetIsConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIsConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIsConfigurationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIsConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIsConfigurationResponse.Merge(m, src)
}
func (m *GetIsConfigurationResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetIsConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIsConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIsConfigurationResponse proto.InternalMessageInfo

func (m *GetIsConfigurationResponse) GetConfiguration() *IsConfiguration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthInfoResponse)(nil), "ttn.lorawan.v3.AuthInfoResponse")
	golang_proto.RegisterType((*AuthInfoResponse)(nil), "ttn.lorawan.v3.AuthInfoResponse")
	proto.RegisterType((*AuthInfoResponse_APIKeyAccess)(nil), "ttn.lorawan.v3.AuthInfoResponse.APIKeyAccess")
	golang_proto.RegisterType((*AuthInfoResponse_APIKeyAccess)(nil), "ttn.lorawan.v3.AuthInfoResponse.APIKeyAccess")
	proto.RegisterType((*GetIsConfigurationRequest)(nil), "ttn.lorawan.v3.GetIsConfigurationRequest")
	golang_proto.RegisterType((*GetIsConfigurationRequest)(nil), "ttn.lorawan.v3.GetIsConfigurationRequest")
	proto.RegisterType((*IsConfiguration)(nil), "ttn.lorawan.v3.IsConfiguration")
	golang_proto.RegisterType((*IsConfiguration)(nil), "ttn.lorawan.v3.IsConfiguration")
	proto.RegisterType((*IsConfiguration_UserRegistration)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration")
	golang_proto.RegisterType((*IsConfiguration_UserRegistration)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration")
	proto.RegisterType((*IsConfiguration_UserRegistration_Invitation)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.Invitation")
	golang_proto.RegisterType((*IsConfiguration_UserRegistration_Invitation)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.Invitation")
	proto.RegisterType((*IsConfiguration_UserRegistration_ContactInfoValidation)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.ContactInfoValidation")
	golang_proto.RegisterType((*IsConfiguration_UserRegistration_ContactInfoValidation)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.ContactInfoValidation")
	proto.RegisterType((*IsConfiguration_UserRegistration_AdminApproval)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.AdminApproval")
	golang_proto.RegisterType((*IsConfiguration_UserRegistration_AdminApproval)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.AdminApproval")
	proto.RegisterType((*IsConfiguration_UserRegistration_PasswordRequirements)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.PasswordRequirements")
	golang_proto.RegisterType((*IsConfiguration_UserRegistration_PasswordRequirements)(nil), "ttn.lorawan.v3.IsConfiguration.UserRegistration.PasswordRequirements")
	proto.RegisterType((*IsConfiguration_ProfilePicture)(nil), "ttn.lorawan.v3.IsConfiguration.ProfilePicture")
	golang_proto.RegisterType((*IsConfiguration_ProfilePicture)(nil), "ttn.lorawan.v3.IsConfiguration.ProfilePicture")
	proto.RegisterType((*IsConfiguration_EndDevicePicture)(nil), "ttn.lorawan.v3.IsConfiguration.EndDevicePicture")
	golang_proto.RegisterType((*IsConfiguration_EndDevicePicture)(nil), "ttn.lorawan.v3.IsConfiguration.EndDevicePicture")
	proto.RegisterType((*IsConfiguration_UserRights)(nil), "ttn.lorawan.v3.IsConfiguration.UserRights")
	golang_proto.RegisterType((*IsConfiguration_UserRights)(nil), "ttn.lorawan.v3.IsConfiguration.UserRights")
	proto.RegisterType((*GetIsConfigurationResponse)(nil), "ttn.lorawan.v3.GetIsConfigurationResponse")
	golang_proto.RegisterType((*GetIsConfigurationResponse)(nil), "ttn.lorawan.v3.GetIsConfigurationResponse")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/identityserver.proto", fileDescriptor_a1c7e02f6181562c)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/identityserver.proto", fileDescriptor_a1c7e02f6181562c)
}

var fileDescriptor_a1c7e02f6181562c = []byte{
	// 1309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcf, 0x6f, 0x1b, 0x45,
	0x1b, 0xf6, 0xfa, 0x6b, 0x53, 0x67, 0x12, 0x27, 0xdb, 0x69, 0xda, 0x2f, 0xd9, 0x16, 0x3b, 0x04,
	0x09, 0x95, 0x4a, 0x59, 0xa3, 0x44, 0xe2, 0x52, 0x15, 0x61, 0x27, 0x21, 0xb1, 0x52, 0xd4, 0x68,
	0x9b, 0x14, 0x04, 0x2a, 0xab, 0xc9, 0xee, 0x78, 0x3d, 0xca, 0x7a, 0x66, 0xbb, 0x33, 0xeb, 0xd4,
	0x3d, 0x20, 0x40, 0x9c, 0x40, 0x42, 0x08, 0x2e, 0x1c, 0x39, 0x72, 0x42, 0x88, 0xbf, 0x80, 0x63,
	0x6f, 0x54, 0xe2, 0xc2, 0x29, 0x80, 0xcb, 0x01, 0x6e, 0x9c, 0x39, 0xa1, 0x9d, 0x19, 0x3b, 0xf6,
	0x3a, 0xcd, 0x8f, 0x8a, 0x9b, 0x67, 0xe6, 0x79, 0x9e, 0xf7, 0xdd, 0x67, 0xde, 0x7d, 0xf7, 0x35,
	0x78, 0x39, 0x64, 0x31, 0xda, 0x47, 0x74, 0x91, 0x0b, 0xe4, 0xed, 0x55, 0x50, 0x44, 0x2a, 0xc4,
	0xc7, 0x54, 0x10, 0xd1, 0xe1, 0x38, 0x6e, 0xe3, 0xd8, 0x8e, 0x62, 0x26, 0x18, 0x9c, 0x12, 0x82,
	0xda, 0x1a, 0x6b, 0xb7, 0x97, 0xad, 0x6a, 0x40, 0x44, 0x33, 0xd9, 0xb5, 0x3d, 0xd6, 0xaa, 0x60,
	0xda, 0x66, 0x9d, 0x28, 0x66, 0x0f, 0x3b, 0x15, 0x09, 0xf6, 0x16, 0x03, 0x4c, 0x17, 0xdb, 0x28,
	0x24, 0x3e, 0x12, 0xb8, 0x32, 0xf2, 0x43, 0x49, 0x5a, 0x8b, 0x03, 0x12, 0x01, 0x0b, 0x98, 0x22,
	0xef, 0x26, 0x0d, 0xb9, 0x92, 0x0b, 0xf9, 0x4b, 0xc3, 0xaf, 0x05, 0x8c, 0x05, 0x21, 0x96, 0x29,
	0x22, 0x4a, 0x99, 0x40, 0x82, 0x30, 0xca, 0xf5, 0x69, 0x49, 0x9f, 0xf6, 0x35, 0xfc, 0x24, 0x96,
	0x00, 0x7d, 0x7e, 0x35, 0x7b, 0x8e, 0x5b, 0x91, 0xe8, 0x3c, 0x8b, 0xbc, 0x1f, 0xa3, 0x28, 0xc2,
	0x71, 0x4f, 0xfc, 0xa5, 0x67, 0x99, 0xd4, 0x20, 0x87, 0xa0, 0x6b, 0xa3, 0xa0, 0x84, 0xf7, 0xfc,
	0xb3, 0x5e, 0x18, 0x3d, 0x65, 0x28, 0x11, 0xcd, 0x5e, 0x06, 0xa3, 0xc7, 0x31, 0x09, 0x9a, 0x42,
	0x8b, 0x2f, 0xfc, 0x70, 0x0e, 0x98, 0xd5, 0x44, 0x34, 0xeb, 0xb4, 0xc1, 0x1c, 0xcc, 0x23, 0x46,
	0x39, 0x86, 0xdb, 0xe0, 0x02, 0x8a, 0x88, 0xbb, 0x87, 0x3b, 0xb3, 0xc6, 0xbc, 0x71, 0x7d, 0x62,
	0x69, 0xd1, 0x1e, 0xbe, 0x25, 0x3b, 0x4b, 0xb1, 0xab, 0x5b, 0xf5, 0x4d, 0xdc, 0xa9, 0x7a, 0x1e,
	0xe6, 0xbc, 0x06, 0xba, 0x07, 0xe5, 0x31, 0xb5, 0xb3, 0x91, 0x73, 0xc6, 0x50, 0x44, 0x36, 0x71,
	0x07, 0x36, 0x00, 0x94, 0x99, 0xb9, 0x48, 0xa2, 0x5c, 0xc1, 0xf6, 0x30, 0x9d, 0xcd, 0xcb, 0x00,
	0xf3, 0xd9, 0x00, 0x77, 0xd2, 0x08, 0x4a, 0x6e, 0x3b, 0xc5, 0xd5, 0x66, 0xba, 0x07, 0x65, 0x33,
	0xbb, 0xbb, 0x91, 0x73, 0x4c, 0xa9, 0x39, 0xb0, 0x07, 0xdf, 0x00, 0x93, 0xa9, 0x3f, 0x2e, 0xc7,
	0x9c, 0x13, 0x46, 0x67, 0xcf, 0xcb, 0x08, 0x57, 0xb3, 0x11, 0x76, 0x38, 0x8e, 0xef, 0x2a, 0xc8,
	0x46, 0xce, 0x99, 0x48, 0x0e, 0x97, 0xb0, 0x0a, 0xcc, 0x84, 0x92, 0x36, 0x8e, 0x39, 0x0a, 0x5d,
	0x65, 0xd7, 0xec, 0xff, 0xa4, 0xca, 0x95, 0xac, 0x8a, 0x23, 0x4f, 0x9d, 0xe9, 0x3e, 0x5e, 0x6d,
	0xc0, 0x39, 0x50, 0x20, 0xdc, 0x45, 0x7e, 0x8b, 0xd0, 0xd9, 0x73, 0xf3, 0xc6, 0xf5, 0x82, 0x73,
	0x81, 0xf0, 0x6a, 0xba, 0xb4, 0xbe, 0x33, 0xc0, 0xe4, 0xa0, 0x5d, 0xb0, 0x9a, 0xb5, 0x7b, 0x24,
	0x8a, 0x82, 0xd7, 0xcc, 0x7f, 0x6a, 0xe7, 0x3f, 0x35, 0xf2, 0xa6, 0xf1, 0xf8, 0xa0, 0x9c, 0x7b,
	0x72, 0x50, 0x36, 0xfa, 0xde, 0xbe, 0x07, 0x80, 0x7a, 0xb7, 0x5c, 0xe2, 0x73, 0xed, 0xe9, 0x8b,
	0x59, 0x95, 0x35, 0x89, 0xa8, 0x1f, 0x16, 0x58, 0x6d, 0x6e, 0x50, 0xb0, 0x7b, 0x50, 0x1e, 0xd7,
	0x90, 0x55, 0xee, 0x8c, 0x63, 0x8d, 0xe6, 0xb5, 0x69, 0x50, 0xd4, 0x57, 0xd6, 0xc2, 0xa2, 0xc9,
	0xfc, 0x85, 0xab, 0x60, 0x6e, 0x1d, 0x8b, 0x3a, 0x5f, 0x61, 0xb4, 0x41, 0x02, 0xfd, 0x3e, 0x38,
	0xf8, 0x41, 0x82, 0xb9, 0x58, 0xf8, 0xc8, 0x04, 0xd3, 0x99, 0x23, 0x78, 0x1f, 0x5c, 0x94, 0x57,
	0x12, 0xe3, 0x80, 0x70, 0xa1, 0x36, 0xb5, 0xa3, 0xaf, 0x66, 0xb3, 0xcc, 0x70, 0xe5, 0x3d, 0x39,
	0x03, 0x3c, 0xc7, 0x4c, 0x32, 0x3b, 0xf0, 0x6d, 0x30, 0x1d, 0xc5, 0xac, 0x41, 0x42, 0xec, 0x46,
	0xc4, 0x13, 0x49, 0x8c, 0xa5, 0xe7, 0x13, 0x4b, 0xf6, 0x49, 0xe2, 0x5b, 0x8a, 0xb6, 0xa5, 0x58,
	0xce, 0x54, 0x34, 0xb4, 0x86, 0xef, 0x03, 0x88, 0xa9, 0xef, 0xfa, 0xb8, 0x4d, 0xbc, 0x43, 0xed,
	0xf3, 0xa7, 0x4b, 0x7c, 0x8d, 0xfa, 0xab, 0x92, 0xd8, 0x53, 0x37, 0x71, 0x66, 0x07, 0x6e, 0x82,
	0x09, 0xe5, 0x8b, 0xaa, 0xb1, 0x31, 0x29, 0x7c, 0xe3, 0x54, 0x8e, 0xa8, 0xba, 0x03, 0x49, 0xff,
	0xb7, 0xf5, 0x57, 0x01, 0x98, 0x59, 0xb3, 0xd2, 0xc2, 0x20, 0xb4, 0x4d, 0x54, 0x4f, 0xd3, 0xe5,
	0x75, 0xf3, 0xac, 0x96, 0xdb, 0xf5, 0xbe, 0x84, 0x33, 0x20, 0x07, 0x3f, 0x00, 0xff, 0xf7, 0x18,
	0x15, 0xc8, 0x13, 0x2e, 0xa1, 0x0d, 0xe6, 0xea, 0x3e, 0x9c, 0x46, 0x52, 0x25, 0xf8, 0xe6, 0x99,
	0x23, 0xad, 0x28, 0xbd, 0xb4, 0xb7, 0xdc, 0xeb, 0xab, 0x39, 0x97, 0xbd, 0xa3, 0xb6, 0x21, 0x06,
	0x53, 0xf2, 0x0d, 0x73, 0x51, 0x14, 0xc5, 0xac, 0x8d, 0x42, 0x5d, 0x53, 0xaf, 0x9f, 0x39, 0xac,
	0x7c, 0x33, 0xab, 0x5a, 0xc5, 0x29, 0xa2, 0xc1, 0x25, 0x7c, 0x04, 0x2e, 0x47, 0x88, 0xf3, 0x7d,
	0x16, 0xfb, 0x6e, 0x8c, 0x1f, 0x24, 0x24, 0xc6, 0x2d, 0x4c, 0x05, 0xd7, 0x45, 0xb6, 0x76, 0xe6,
	0x68, 0x5b, 0x5a, 0xcd, 0x19, 0x10, 0x73, 0x66, 0xa2, 0x23, 0x76, 0xe1, 0x2c, 0xb8, 0x80, 0x29,
	0xda, 0x0d, 0xb1, 0x2f, 0xcb, 0xae, 0xe0, 0xf4, 0x96, 0xd6, 0xe7, 0x06, 0x00, 0x87, 0xf7, 0x02,
	0x5f, 0x03, 0x05, 0x9d, 0x9b, 0xaf, 0xaf, 0xd9, 0xb2, 0xd5, 0xd7, 0xc7, 0xee, 0x7d, 0x7d, 0xec,
	0x1a, 0x63, 0xe1, 0x3d, 0x14, 0x26, 0xd8, 0xe9, 0x63, 0xe1, 0x06, 0x18, 0x97, 0x8d, 0xd8, 0x15,
	0x22, 0xd4, 0xb7, 0x36, 0x37, 0x42, 0x5c, 0xd5, 0x8f, 0x52, 0x33, 0xbb, 0x07, 0xe5, 0x82, 0x6c,
	0xb3, 0xdb, 0xdb, 0xb7, 0xbf, 0xfe, 0xb5, 0x6c, 0x38, 0x05, 0xc9, 0xde, 0x16, 0xa1, 0x75, 0x07,
	0x5c, 0x3e, 0xf2, 0xf6, 0x9e, 0x37, 0x35, 0x6b, 0x1d, 0x14, 0x87, 0xee, 0xe5, 0xb9, 0x85, 0x7e,
	0xca, 0x83, 0x99, 0xa3, 0x3c, 0x87, 0x37, 0x01, 0x48, 0xcb, 0x27, 0xc4, 0x34, 0x10, 0x4d, 0x2d,
	0x79, 0x6d, 0x44, 0x72, 0xa7, 0x4e, 0xc5, 0xf2, 0x92, 0x12, 0x1d, 0x6f, 0x11, 0x7a, 0x5b, 0xc2,
	0x25, 0x19, 0x3d, 0xec, 0x91, 0xf3, 0xa7, 0x22, 0xa3, 0x87, 0x9a, 0x5c, 0x05, 0xc5, 0x34, 0x72,
	0x92, 0x4e, 0x03, 0x1e, 0xe2, 0x58, 0x57, 0xee, 0xf1, 0xfc, 0xc9, 0x16, 0xa1, 0x3b, 0x3d, 0x46,
	0x2f, 0x79, 0x9f, 0x04, 0xa4, 0x5f, 0x8b, 0x27, 0x27, 0xbf, 0x2a, 0xe1, 0xf0, 0x16, 0x98, 0x48,
	0xc9, 0x3c, 0xc2, 0x1e, 0x41, 0xa1, 0x6e, 0x69, 0xc7, 0xb3, 0xd3, 0x68, 0x77, 0x15, 0xde, 0xfa,
	0xd2, 0x00, 0x53, 0xc3, 0xbd, 0x13, 0x56, 0xc1, 0x94, 0x4f, 0x78, 0x5a, 0x9b, 0x6e, 0x12, 0x85,
	0x0c, 0x9d, 0xe6, 0x8a, 0x8a, 0x9a, 0xb1, 0x23, 0x09, 0xf0, 0x96, 0xfc, 0x72, 0xbb, 0x41, 0x8c,
	0xda, 0x48, 0xa0, 0x58, 0x7b, 0x7a, 0x9c, 0x40, 0xda, 0x3e, 0xd7, 0x35, 0xdc, 0xda, 0x01, 0x66,
	0xb6, 0xe7, 0xfe, 0x07, 0x59, 0x59, 0xdf, 0xe7, 0x01, 0x38, 0x6c, 0xb9, 0x70, 0x13, 0x5c, 0xf2,
	0x62, 0x8c, 0x04, 0x4e, 0xbb, 0x4e, 0x48, 0x3c, 0x35, 0x2d, 0x9e, 0x42, 0x16, 0x2a, 0x5a, 0x75,
	0x80, 0x95, 0xa6, 0xa7, 0xc5, 0xbc, 0x90, 0xc8, 0x9e, 0x72, 0xf2, 0x33, 0x17, 0x15, 0x63, 0x45,
	0x11, 0xe0, 0x0a, 0x98, 0xd6, 0x12, 0x01, 0x12, 0x78, 0x1f, 0x75, 0x7a, 0xb3, 0xca, 0x71, 0x1a,
	0x3a, 0xea, 0xba, 0x66, 0xc0, 0xb7, 0xc0, 0x8c, 0x16, 0x61, 0x71, 0x80, 0x28, 0x79, 0xa4, 0x9f,
	0xea, 0xdc, 0x89, 0x4a, 0xda, 0x8c, 0x3b, 0x83, 0xb4, 0x05, 0x0f, 0x58, 0x47, 0x0d, 0x08, 0x7a,
	0xbc, 0x5c, 0x03, 0x45, 0x6f, 0xf0, 0x40, 0x7b, 0x57, 0x3e, 0xa1, 0x8f, 0x3a, 0xc3, 0xac, 0xa5,
	0x26, 0x98, 0x54, 0xe3, 0x8a, 0x1e, 0xa3, 0xde, 0x01, 0x85, 0xde, 0x58, 0x0a, 0xaf, 0x8c, 0x64,
	0xbc, 0x96, 0x8e, 0xe5, 0xd6, 0xfc, 0x49, 0x83, 0xec, 0x02, 0xfc, 0xf8, 0xe7, 0x3f, 0xbe, 0xca,
	0x4f, 0x42, 0x50, 0x91, 0xb3, 0x6a, 0xfa, 0x5d, 0x5b, 0xfa, 0xcc, 0x00, 0xf9, 0x3a, 0x87, 0x9f,
	0x18, 0xc0, 0x5c, 0xc7, 0x62, 0x78, 0xb4, 0x79, 0x25, 0xab, 0xf8, 0xcc, 0xc9, 0xc8, 0xba, 0x71,
	0x1a, 0xa8, 0x4e, 0x63, 0x4e, 0xa6, 0x71, 0x09, 0x5e, 0xac, 0x10, 0x5e, 0x19, 0x7a, 0xee, 0xda,
	0xfd, 0x5f, 0x7e, 0x2f, 0xe5, 0x3e, 0xec, 0x96, 0x8c, 0x6f, 0xbb, 0x25, 0xe3, 0x71, 0xb7, 0x64,
	0x3c, 0xe9, 0x96, 0x8c, 0xdf, 0xba, 0x25, 0xe3, 0xcf, 0x6e, 0x29, 0xf7, 0x77, 0xb7, 0x64, 0x7c,
	0xf1, 0xb4, 0x94, 0xfb, 0xe6, 0x69, 0x29, 0xf7, 0xe3, 0xd3, 0x92, 0xf1, 0x6e, 0x25, 0x60, 0xb6,
	0x68, 0x62, 0xd1, 0x24, 0x34, 0xe0, 0x36, 0xc5, 0x62, 0x9f, 0xc5, 0x7b, 0x95, 0xe1, 0x7f, 0x05,
	0xed, 0xe5, 0x4a, 0xb4, 0x17, 0x54, 0x84, 0xa0, 0xd1, 0xee, 0xee, 0x98, 0xb4, 0x6c, 0xf9, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x99, 0x48, 0x00, 0xc1, 0x0d, 0x00, 0x00,
}

func (this *AuthInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthInfoResponse)
	if !ok {
		that2, ok := that.(AuthInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.AccessMethod == nil {
		if this.AccessMethod != nil {
			return false
		}
	} else if this.AccessMethod == nil {
		return false
	} else if !this.AccessMethod.Equal(that1.AccessMethod) {
		return false
	}
	if !this.UniversalRights.Equal(that1.UniversalRights) {
		return false
	}
	if this.IsAdmin != that1.IsAdmin {
		return false
	}
	return true
}
func (this *AuthInfoResponse_APIKey) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthInfoResponse_APIKey)
	if !ok {
		that2, ok := that.(AuthInfoResponse_APIKey)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.APIKey.Equal(that1.APIKey) {
		return false
	}
	return true
}
func (this *AuthInfoResponse_OAuthAccessToken) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthInfoResponse_OAuthAccessToken)
	if !ok {
		that2, ok := that.(AuthInfoResponse_OAuthAccessToken)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OAuthAccessToken.Equal(that1.OAuthAccessToken) {
		return false
	}
	return true
}
func (this *AuthInfoResponse_UserSession) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthInfoResponse_UserSession)
	if !ok {
		that2, ok := that.(AuthInfoResponse_UserSession)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UserSession.Equal(that1.UserSession) {
		return false
	}
	return true
}
func (this *AuthInfoResponse_APIKeyAccess) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AuthInfoResponse_APIKeyAccess)
	if !ok {
		that2, ok := that.(AuthInfoResponse_APIKeyAccess)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.APIKey.Equal(&that1.APIKey) {
		return false
	}
	if !this.EntityIDs.Equal(&that1.EntityIDs) {
		return false
	}
	return true
}
func (this *GetIsConfigurationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetIsConfigurationRequest)
	if !ok {
		that2, ok := that.(GetIsConfigurationRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *IsConfiguration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration)
	if !ok {
		that2, ok := that.(IsConfiguration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UserRegistration.Equal(that1.UserRegistration) {
		return false
	}
	if !this.ProfilePicture.Equal(that1.ProfilePicture) {
		return false
	}
	if !this.EndDevicePicture.Equal(that1.EndDevicePicture) {
		return false
	}
	if !this.UserRights.Equal(that1.UserRights) {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRegistration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRegistration)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRegistration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Invitation.Equal(that1.Invitation) {
		return false
	}
	if !this.ContactInfoValidation.Equal(that1.ContactInfoValidation) {
		return false
	}
	if !this.AdminApproval.Equal(that1.AdminApproval) {
		return false
	}
	if !this.PasswordRequirements.Equal(that1.PasswordRequirements) {
		return false
	}
	if this.Enabled != that1.Enabled {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRegistration_Invitation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRegistration_Invitation)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRegistration_Invitation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	if this.TokenTTL != nil && that1.TokenTTL != nil {
		if *this.TokenTTL != *that1.TokenTTL {
			return false
		}
	} else if this.TokenTTL != nil {
		return false
	} else if that1.TokenTTL != nil {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRegistration_ContactInfoValidation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRegistration_ContactInfoValidation)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRegistration_ContactInfoValidation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRegistration_AdminApproval) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRegistration_AdminApproval)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRegistration_AdminApproval)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Required.Equal(that1.Required) {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRegistration_PasswordRequirements) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRegistration_PasswordRequirements)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRegistration_PasswordRequirements)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.MinLength.Equal(that1.MinLength) {
		return false
	}
	if !this.MaxLength.Equal(that1.MaxLength) {
		return false
	}
	if !this.MinUppercase.Equal(that1.MinUppercase) {
		return false
	}
	if !this.MinDigits.Equal(that1.MinDigits) {
		return false
	}
	if !this.MinSpecial.Equal(that1.MinSpecial) {
		return false
	}
	return true
}
func (this *IsConfiguration_ProfilePicture) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_ProfilePicture)
	if !ok {
		that2, ok := that.(IsConfiguration_ProfilePicture)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableUpload.Equal(that1.DisableUpload) {
		return false
	}
	if !this.UseGravatar.Equal(that1.UseGravatar) {
		return false
	}
	return true
}
func (this *IsConfiguration_EndDevicePicture) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_EndDevicePicture)
	if !ok {
		that2, ok := that.(IsConfiguration_EndDevicePicture)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableUpload.Equal(that1.DisableUpload) {
		return false
	}
	return true
}
func (this *IsConfiguration_UserRights) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*IsConfiguration_UserRights)
	if !ok {
		that2, ok := that.(IsConfiguration_UserRights)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.CreateApplications.Equal(that1.CreateApplications) {
		return false
	}
	if !this.CreateClients.Equal(that1.CreateClients) {
		return false
	}
	if !this.CreateGateways.Equal(that1.CreateGateways) {
		return false
	}
	if !this.CreateOrganizations.Equal(that1.CreateOrganizations) {
		return false
	}
	return true
}
func (this *GetIsConfigurationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetIsConfigurationResponse)
	if !ok {
		that2, ok := that.(GetIsConfigurationResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Configuration.Equal(that1.Configuration) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EntityAccessClient is the client API for EntityAccess service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntityAccessClient interface {
	// AuthInfo returns information about the authentication that is used on the request.
	AuthInfo(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*AuthInfoResponse, error)
}

type entityAccessClient struct {
	cc *grpc.ClientConn
}

func NewEntityAccessClient(cc *grpc.ClientConn) EntityAccessClient {
	return &entityAccessClient{cc}
}

func (c *entityAccessClient) AuthInfo(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*AuthInfoResponse, error) {
	out := new(AuthInfoResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.EntityAccess/AuthInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EntityAccessServer is the server API for EntityAccess service.
type EntityAccessServer interface {
	// AuthInfo returns information about the authentication that is used on the request.
	AuthInfo(context.Context, *types.Empty) (*AuthInfoResponse, error)
}

// UnimplementedEntityAccessServer can be embedded to have forward compatible implementations.
type UnimplementedEntityAccessServer struct {
}

func (*UnimplementedEntityAccessServer) AuthInfo(ctx context.Context, req *types.Empty) (*AuthInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthInfo not implemented")
}

func RegisterEntityAccessServer(s *grpc.Server, srv EntityAccessServer) {
	s.RegisterService(&_EntityAccess_serviceDesc, srv)
}

func _EntityAccess_AuthInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntityAccessServer).AuthInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.EntityAccess/AuthInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntityAccessServer).AuthInfo(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EntityAccess_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.EntityAccess",
	HandlerType: (*EntityAccessServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthInfo",
			Handler:    _EntityAccess_AuthInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/identityserver.proto",
}

// IsClient is the client API for Is service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IsClient interface {
	// Get the configuration of the Identity Server. The response is typically used
	// to enable or disable features in a user interface.
	GetConfiguration(ctx context.Context, in *GetIsConfigurationRequest, opts ...grpc.CallOption) (*GetIsConfigurationResponse, error)
}

type isClient struct {
	cc *grpc.ClientConn
}

func NewIsClient(cc *grpc.ClientConn) IsClient {
	return &isClient{cc}
}

func (c *isClient) GetConfiguration(ctx context.Context, in *GetIsConfigurationRequest, opts ...grpc.CallOption) (*GetIsConfigurationResponse, error) {
	out := new(GetIsConfigurationResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.Is/GetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IsServer is the server API for Is service.
type IsServer interface {
	// Get the configuration of the Identity Server. The response is typically used
	// to enable or disable features in a user interface.
	GetConfiguration(context.Context, *GetIsConfigurationRequest) (*GetIsConfigurationResponse, error)
}

// UnimplementedIsServer can be embedded to have forward compatible implementations.
type UnimplementedIsServer struct {
}

func (*UnimplementedIsServer) GetConfiguration(ctx context.Context, req *GetIsConfigurationRequest) (*GetIsConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfiguration not implemented")
}

func RegisterIsServer(s *grpc.Server, srv IsServer) {
	s.RegisterService(&_Is_serviceDesc, srv)
}

func _Is_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIsConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IsServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.Is/GetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IsServer).GetConfiguration(ctx, req.(*GetIsConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Is_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.Is",
	HandlerType: (*IsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfiguration",
			Handler:    _Is_GetConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/identityserver.proto",
}

func (m *AuthInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AccessMethod != nil {
		{
			size := m.AccessMethod.Size()
			i -= size
			if _, err := m.AccessMethod.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.IsAdmin {
		i--
		if m.IsAdmin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.UniversalRights != nil {
		{
			size, err := m.UniversalRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}

func (m *AuthInfoResponse_APIKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthInfoResponse_APIKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.APIKey != nil {
		{
			size, err := m.APIKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *AuthInfoResponse_OAuthAccessToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthInfoResponse_OAuthAccessToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OAuthAccessToken != nil {
		{
			size, err := m.OAuthAccessToken.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AuthInfoResponse_UserSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthInfoResponse_UserSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UserSession != nil {
		{
			size, err := m.UserSession.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *AuthInfoResponse_APIKeyAccess) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthInfoResponse_APIKeyAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthInfoResponse_APIKeyAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.EntityIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintIdentityserver(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.APIKey.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintIdentityserver(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *GetIsConfigurationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIsConfigurationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIsConfigurationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *IsConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserRights != nil {
		{
			size, err := m.UserRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.EndDevicePicture != nil {
		{
			size, err := m.EndDevicePicture.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ProfilePicture != nil {
		{
			size, err := m.ProfilePicture.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.UserRegistration != nil {
		{
			size, err := m.UserRegistration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRegistration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRegistration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRegistration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.PasswordRequirements != nil {
		{
			size, err := m.PasswordRequirements.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.AdminApproval != nil {
		{
			size, err := m.AdminApproval.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ContactInfoValidation != nil {
		{
			size, err := m.ContactInfoValidation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Invitation != nil {
		{
			size, err := m.Invitation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRegistration_Invitation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRegistration_Invitation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRegistration_Invitation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TokenTTL != nil {
		n15, err15 := github_com_gogo_protobuf_types.StdDurationMarshalTo(*m.TokenTTL, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(*m.TokenTTL):])
		if err15 != nil {
			return 0, err15
		}
		i -= n15
		i = encodeVarintIdentityserver(dAtA, i, uint64(n15))
		i--
		dAtA[i] = 0x12
	}
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRegistration_AdminApproval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRegistration_AdminApproval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRegistration_AdminApproval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Required != nil {
		{
			size, err := m.Required.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinSpecial != nil {
		{
			size, err := m.MinSpecial.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.MinDigits != nil {
		{
			size, err := m.MinDigits.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.MinUppercase != nil {
		{
			size, err := m.MinUppercase.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.MaxLength != nil {
		{
			size, err := m.MaxLength.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MinLength != nil {
		{
			size, err := m.MinLength.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_ProfilePicture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_ProfilePicture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_ProfilePicture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UseGravatar != nil {
		{
			size, err := m.UseGravatar.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DisableUpload != nil {
		{
			size, err := m.DisableUpload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_EndDevicePicture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_EndDevicePicture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_EndDevicePicture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DisableUpload != nil {
		{
			size, err := m.DisableUpload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IsConfiguration_UserRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IsConfiguration_UserRights) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IsConfiguration_UserRights) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreateOrganizations != nil {
		{
			size, err := m.CreateOrganizations.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CreateGateways != nil {
		{
			size, err := m.CreateGateways.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.CreateClients != nil {
		{
			size, err := m.CreateClients.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CreateApplications != nil {
		{
			size, err := m.CreateApplications.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetIsConfigurationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIsConfigurationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIsConfigurationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Configuration != nil {
		{
			size, err := m.Configuration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentityserver(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintIdentityserver(dAtA []byte, offset int, v uint64) int {
	offset -= sovIdentityserver(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AuthInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccessMethod != nil {
		n += m.AccessMethod.Size()
	}
	if m.UniversalRights != nil {
		l = m.UniversalRights.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.IsAdmin {
		n += 2
	}
	return n
}

func (m *AuthInfoResponse_APIKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.APIKey != nil {
		l = m.APIKey.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}
func (m *AuthInfoResponse_OAuthAccessToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OAuthAccessToken != nil {
		l = m.OAuthAccessToken.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}
func (m *AuthInfoResponse_UserSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserSession != nil {
		l = m.UserSession.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}
func (m *AuthInfoResponse_APIKeyAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.APIKey.Size()
	n += 1 + l + sovIdentityserver(uint64(l))
	l = m.EntityIDs.Size()
	n += 1 + l + sovIdentityserver(uint64(l))
	return n
}

func (m *GetIsConfigurationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *IsConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserRegistration != nil {
		l = m.UserRegistration.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.ProfilePicture != nil {
		l = m.ProfilePicture.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.EndDevicePicture != nil {
		l = m.EndDevicePicture.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.UserRights != nil {
		l = m.UserRights.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_UserRegistration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Invitation != nil {
		l = m.Invitation.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.ContactInfoValidation != nil {
		l = m.ContactInfoValidation.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.AdminApproval != nil {
		l = m.AdminApproval.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.PasswordRequirements != nil {
		l = m.PasswordRequirements.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.Enabled {
		n += 2
	}
	return n
}

func (m *IsConfiguration_UserRegistration_Invitation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.TokenTTL != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdDuration(*m.TokenTTL)
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_UserRegistration_ContactInfoValidation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_UserRegistration_AdminApproval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Required != nil {
		l = m.Required.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_UserRegistration_PasswordRequirements) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MinLength != nil {
		l = m.MinLength.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.MaxLength != nil {
		l = m.MaxLength.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.MinUppercase != nil {
		l = m.MinUppercase.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.MinDigits != nil {
		l = m.MinDigits.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.MinSpecial != nil {
		l = m.MinSpecial.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_ProfilePicture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableUpload != nil {
		l = m.DisableUpload.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.UseGravatar != nil {
		l = m.UseGravatar.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_EndDevicePicture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableUpload != nil {
		l = m.DisableUpload.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *IsConfiguration_UserRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreateApplications != nil {
		l = m.CreateApplications.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.CreateClients != nil {
		l = m.CreateClients.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.CreateGateways != nil {
		l = m.CreateGateways.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	if m.CreateOrganizations != nil {
		l = m.CreateOrganizations.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func (m *GetIsConfigurationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Configuration != nil {
		l = m.Configuration.Size()
		n += 1 + l + sovIdentityserver(uint64(l))
	}
	return n
}

func sovIdentityserver(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozIdentityserver(x uint64) (n int) {
	return sovIdentityserver(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *AuthInfoResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthInfoResponse{`,
		`AccessMethod:` + fmt.Sprintf("%v", this.AccessMethod) + `,`,
		`UniversalRights:` + strings.Replace(fmt.Sprintf("%v", this.UniversalRights), "Rights", "Rights", 1) + `,`,
		`IsAdmin:` + fmt.Sprintf("%v", this.IsAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthInfoResponse_APIKey) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthInfoResponse_APIKey{`,
		`APIKey:` + strings.Replace(fmt.Sprintf("%v", this.APIKey), "AuthInfoResponse_APIKeyAccess", "AuthInfoResponse_APIKeyAccess", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthInfoResponse_OAuthAccessToken) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthInfoResponse_OAuthAccessToken{`,
		`OAuthAccessToken:` + strings.Replace(fmt.Sprintf("%v", this.OAuthAccessToken), "OAuthAccessToken", "OAuthAccessToken", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthInfoResponse_UserSession) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthInfoResponse_UserSession{`,
		`UserSession:` + strings.Replace(fmt.Sprintf("%v", this.UserSession), "UserSession", "UserSession", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AuthInfoResponse_APIKeyAccess) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AuthInfoResponse_APIKeyAccess{`,
		`APIKey:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.APIKey), "APIKey", "APIKey", 1), `&`, ``, 1) + `,`,
		`EntityIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EntityIDs), "EntityIdentifiers", "EntityIdentifiers", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetIsConfigurationRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetIsConfigurationRequest{`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration{`,
		`UserRegistration:` + strings.Replace(fmt.Sprintf("%v", this.UserRegistration), "IsConfiguration_UserRegistration", "IsConfiguration_UserRegistration", 1) + `,`,
		`ProfilePicture:` + strings.Replace(fmt.Sprintf("%v", this.ProfilePicture), "IsConfiguration_ProfilePicture", "IsConfiguration_ProfilePicture", 1) + `,`,
		`EndDevicePicture:` + strings.Replace(fmt.Sprintf("%v", this.EndDevicePicture), "IsConfiguration_EndDevicePicture", "IsConfiguration_EndDevicePicture", 1) + `,`,
		`UserRights:` + strings.Replace(fmt.Sprintf("%v", this.UserRights), "IsConfiguration_UserRights", "IsConfiguration_UserRights", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRegistration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRegistration{`,
		`Invitation:` + strings.Replace(fmt.Sprintf("%v", this.Invitation), "IsConfiguration_UserRegistration_Invitation", "IsConfiguration_UserRegistration_Invitation", 1) + `,`,
		`ContactInfoValidation:` + strings.Replace(fmt.Sprintf("%v", this.ContactInfoValidation), "IsConfiguration_UserRegistration_ContactInfoValidation", "IsConfiguration_UserRegistration_ContactInfoValidation", 1) + `,`,
		`AdminApproval:` + strings.Replace(fmt.Sprintf("%v", this.AdminApproval), "IsConfiguration_UserRegistration_AdminApproval", "IsConfiguration_UserRegistration_AdminApproval", 1) + `,`,
		`PasswordRequirements:` + strings.Replace(fmt.Sprintf("%v", this.PasswordRequirements), "IsConfiguration_UserRegistration_PasswordRequirements", "IsConfiguration_UserRegistration_PasswordRequirements", 1) + `,`,
		`Enabled:` + fmt.Sprintf("%v", this.Enabled) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRegistration_Invitation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRegistration_Invitation{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`TokenTTL:` + strings.Replace(fmt.Sprintf("%v", this.TokenTTL), "Duration", "types.Duration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRegistration_ContactInfoValidation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRegistration_ContactInfoValidation{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRegistration_AdminApproval) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRegistration_AdminApproval{`,
		`Required:` + strings.Replace(fmt.Sprintf("%v", this.Required), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRegistration_PasswordRequirements) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRegistration_PasswordRequirements{`,
		`MinLength:` + strings.Replace(fmt.Sprintf("%v", this.MinLength), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MaxLength:` + strings.Replace(fmt.Sprintf("%v", this.MaxLength), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinUppercase:` + strings.Replace(fmt.Sprintf("%v", this.MinUppercase), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinDigits:` + strings.Replace(fmt.Sprintf("%v", this.MinDigits), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`MinSpecial:` + strings.Replace(fmt.Sprintf("%v", this.MinSpecial), "UInt32Value", "types.UInt32Value", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_ProfilePicture) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_ProfilePicture{`,
		`DisableUpload:` + strings.Replace(fmt.Sprintf("%v", this.DisableUpload), "BoolValue", "types.BoolValue", 1) + `,`,
		`UseGravatar:` + strings.Replace(fmt.Sprintf("%v", this.UseGravatar), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_EndDevicePicture) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_EndDevicePicture{`,
		`DisableUpload:` + strings.Replace(fmt.Sprintf("%v", this.DisableUpload), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IsConfiguration_UserRights) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IsConfiguration_UserRights{`,
		`CreateApplications:` + strings.Replace(fmt.Sprintf("%v", this.CreateApplications), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateClients:` + strings.Replace(fmt.Sprintf("%v", this.CreateClients), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateGateways:` + strings.Replace(fmt.Sprintf("%v", this.CreateGateways), "BoolValue", "types.BoolValue", 1) + `,`,
		`CreateOrganizations:` + strings.Replace(fmt.Sprintf("%v", this.CreateOrganizations), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetIsConfigurationResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetIsConfigurationResponse{`,
		`Configuration:` + strings.Replace(this.Configuration.String(), "IsConfiguration", "IsConfiguration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringIdentityserver(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AuthInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AuthInfoResponse_APIKeyAccess{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AccessMethod = &AuthInfoResponse_APIKey{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OAuthAccessToken", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OAuthAccessToken{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AccessMethod = &AuthInfoResponse_OAuthAccessToken{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UniversalRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UniversalRights == nil {
				m.UniversalRights = &Rights{}
			}
			if err := m.UniversalRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAdmin = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserSession", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserSession{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AccessMethod = &AuthInfoResponse_UserSession{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthInfoResponse_APIKeyAccess) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIKeyAccess: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIKeyAccess: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.APIKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EntityIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIsConfigurationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIsConfigurationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIsConfigurationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IsConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IsConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegistration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserRegistration == nil {
				m.UserRegistration = &IsConfiguration_UserRegistration{}
			}
			if err := m.UserRegistration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePicture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProfilePicture == nil {
				m.ProfilePicture = &IsConfiguration_ProfilePicture{}
			}
			if err := m.ProfilePicture.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDevicePicture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDevicePicture == nil {
				m.EndDevicePicture = &IsConfiguration_EndDevicePicture{}
			}
			if err := m.EndDevicePicture.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserRights == nil {
				m.UserRights = &IsConfiguration_UserRights{}
			}
			if err := m.UserRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRegistration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRegistration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRegistration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invitation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Invitation == nil {
				m.Invitation = &IsConfiguration_UserRegistration_Invitation{}
			}
			if err := m.Invitation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactInfoValidation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContactInfoValidation == nil {
				m.ContactInfoValidation = &IsConfiguration_UserRegistration_ContactInfoValidation{}
			}
			if err := m.ContactInfoValidation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminApproval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminApproval == nil {
				m.AdminApproval = &IsConfiguration_UserRegistration_AdminApproval{}
			}
			if err := m.AdminApproval.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordRequirements", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PasswordRequirements == nil {
				m.PasswordRequirements = &IsConfiguration_UserRegistration_PasswordRequirements{}
			}
			if err := m.PasswordRequirements.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRegistration_Invitation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Invitation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Invitation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenTTL", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TokenTTL == nil {
				m.TokenTTL = new(time.Duration)
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(m.TokenTTL, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRegistration_ContactInfoValidation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactInfoValidation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactInfoValidation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRegistration_AdminApproval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdminApproval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdminApproval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Required", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Required == nil {
				m.Required = &types.BoolValue{}
			}
			if err := m.Required.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRegistration_PasswordRequirements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PasswordRequirements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PasswordRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLength", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinLength == nil {
				m.MinLength = &types.UInt32Value{}
			}
			if err := m.MinLength.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLength", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxLength == nil {
				m.MaxLength = &types.UInt32Value{}
			}
			if err := m.MaxLength.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinUppercase", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinUppercase == nil {
				m.MinUppercase = &types.UInt32Value{}
			}
			if err := m.MinUppercase.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDigits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinDigits == nil {
				m.MinDigits = &types.UInt32Value{}
			}
			if err := m.MinDigits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSpecial", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MinSpecial == nil {
				m.MinSpecial = &types.UInt32Value{}
			}
			if err := m.MinSpecial.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_ProfilePicture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfilePicture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfilePicture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableUpload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisableUpload == nil {
				m.DisableUpload = &types.BoolValue{}
			}
			if err := m.DisableUpload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseGravatar", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UseGravatar == nil {
				m.UseGravatar = &types.BoolValue{}
			}
			if err := m.UseGravatar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_EndDevicePicture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EndDevicePicture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EndDevicePicture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableUpload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisableUpload == nil {
				m.DisableUpload = &types.BoolValue{}
			}
			if err := m.DisableUpload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IsConfiguration_UserRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateApplications", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateApplications == nil {
				m.CreateApplications = &types.BoolValue{}
			}
			if err := m.CreateApplications.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateClients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateClients == nil {
				m.CreateClients = &types.BoolValue{}
			}
			if err := m.CreateClients.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateGateways", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateGateways == nil {
				m.CreateGateways = &types.BoolValue{}
			}
			if err := m.CreateGateways.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateOrganizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateOrganizations == nil {
				m.CreateOrganizations = &types.BoolValue{}
			}
			if err := m.CreateOrganizations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIsConfigurationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIsConfigurationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIsConfigurationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentityserver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Configuration == nil {
				m.Configuration = &IsConfiguration{}
			}
			if err := m.Configuration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentityserver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthIdentityserver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipIdentityserver(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowIdentityserver
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIdentityserver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthIdentityserver
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupIdentityserver
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthIdentityserver
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthIdentityserver        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowIdentityserver          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupIdentityserver = fmt.Errorf("proto: unexpected end of group")
)
