// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/message_services.proto

package ttnpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EncodeDownlinkMessageRequest struct {
	EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3,embedded=ids" json:"ids"`
	EndDeviceVersionIDs  EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids"`
	Message              ApplicationDownlink         `protobuf:"bytes,3,opt,name=message,proto3" json:"message"`
	Formatter            PayloadFormatter            `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter            string                      `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EncodeDownlinkMessageRequest) Reset()      { *m = EncodeDownlinkMessageRequest{} }
func (*EncodeDownlinkMessageRequest) ProtoMessage() {}
func (*EncodeDownlinkMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa32647f6f069ac, []int{0}
}
func (m *EncodeDownlinkMessageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EncodeDownlinkMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EncodeDownlinkMessageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EncodeDownlinkMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodeDownlinkMessageRequest.Merge(m, src)
}
func (m *EncodeDownlinkMessageRequest) XXX_Size() int {
	return m.Size()
}
func (m *EncodeDownlinkMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodeDownlinkMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncodeDownlinkMessageRequest proto.InternalMessageInfo

func (m *EncodeDownlinkMessageRequest) GetEndDeviceVersionIDs() EndDeviceVersionIdentifiers {
	if m != nil {
		return m.EndDeviceVersionIDs
	}
	return EndDeviceVersionIdentifiers{}
}

func (m *EncodeDownlinkMessageRequest) GetMessage() ApplicationDownlink {
	if m != nil {
		return m.Message
	}
	return ApplicationDownlink{}
}

func (m *EncodeDownlinkMessageRequest) GetFormatter() PayloadFormatter {
	if m != nil {
		return m.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (m *EncodeDownlinkMessageRequest) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

type DecodeUplinkMessageRequest struct {
	EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3,embedded=ids" json:"ids"`
	EndDeviceVersionIDs  EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids"`
	Message              ApplicationUplink           `protobuf:"bytes,3,opt,name=message,proto3" json:"message"`
	Formatter            PayloadFormatter            `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter            string                      `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DecodeUplinkMessageRequest) Reset()      { *m = DecodeUplinkMessageRequest{} }
func (*DecodeUplinkMessageRequest) ProtoMessage() {}
func (*DecodeUplinkMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa32647f6f069ac, []int{1}
}
func (m *DecodeUplinkMessageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecodeUplinkMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecodeUplinkMessageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecodeUplinkMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeUplinkMessageRequest.Merge(m, src)
}
func (m *DecodeUplinkMessageRequest) XXX_Size() int {
	return m.Size()
}
func (m *DecodeUplinkMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeUplinkMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeUplinkMessageRequest proto.InternalMessageInfo

func (m *DecodeUplinkMessageRequest) GetEndDeviceVersionIDs() EndDeviceVersionIdentifiers {
	if m != nil {
		return m.EndDeviceVersionIDs
	}
	return EndDeviceVersionIdentifiers{}
}

func (m *DecodeUplinkMessageRequest) GetMessage() ApplicationUplink {
	if m != nil {
		return m.Message
	}
	return ApplicationUplink{}
}

func (m *DecodeUplinkMessageRequest) GetFormatter() PayloadFormatter {
	if m != nil {
		return m.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (m *DecodeUplinkMessageRequest) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

type DecodeDownlinkMessageRequest struct {
	EndDeviceIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3,embedded=ids" json:"ids"`
	EndDeviceVersionIDs  EndDeviceVersionIdentifiers `protobuf:"bytes,2,opt,name=end_device_version_ids,json=endDeviceVersionIds,proto3" json:"end_device_version_ids"`
	Message              ApplicationDownlink         `protobuf:"bytes,3,opt,name=message,proto3" json:"message"`
	Formatter            PayloadFormatter            `protobuf:"varint,4,opt,name=formatter,proto3,enum=ttn.lorawan.v3.PayloadFormatter" json:"formatter,omitempty"`
	Parameter            string                      `protobuf:"bytes,5,opt,name=parameter,proto3" json:"parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DecodeDownlinkMessageRequest) Reset()      { *m = DecodeDownlinkMessageRequest{} }
func (*DecodeDownlinkMessageRequest) ProtoMessage() {}
func (*DecodeDownlinkMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa32647f6f069ac, []int{2}
}
func (m *DecodeDownlinkMessageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecodeDownlinkMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecodeDownlinkMessageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecodeDownlinkMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeDownlinkMessageRequest.Merge(m, src)
}
func (m *DecodeDownlinkMessageRequest) XXX_Size() int {
	return m.Size()
}
func (m *DecodeDownlinkMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeDownlinkMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeDownlinkMessageRequest proto.InternalMessageInfo

func (m *DecodeDownlinkMessageRequest) GetEndDeviceVersionIDs() EndDeviceVersionIdentifiers {
	if m != nil {
		return m.EndDeviceVersionIDs
	}
	return EndDeviceVersionIdentifiers{}
}

func (m *DecodeDownlinkMessageRequest) GetMessage() ApplicationDownlink {
	if m != nil {
		return m.Message
	}
	return ApplicationDownlink{}
}

func (m *DecodeDownlinkMessageRequest) GetFormatter() PayloadFormatter {
	if m != nil {
		return m.Formatter
	}
	return PayloadFormatter_FORMATTER_NONE
}

func (m *DecodeDownlinkMessageRequest) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

func init() {
	proto.RegisterType((*EncodeDownlinkMessageRequest)(nil), "ttn.lorawan.v3.EncodeDownlinkMessageRequest")
	golang_proto.RegisterType((*EncodeDownlinkMessageRequest)(nil), "ttn.lorawan.v3.EncodeDownlinkMessageRequest")
	proto.RegisterType((*DecodeUplinkMessageRequest)(nil), "ttn.lorawan.v3.DecodeUplinkMessageRequest")
	golang_proto.RegisterType((*DecodeUplinkMessageRequest)(nil), "ttn.lorawan.v3.DecodeUplinkMessageRequest")
	proto.RegisterType((*DecodeDownlinkMessageRequest)(nil), "ttn.lorawan.v3.DecodeDownlinkMessageRequest")
	golang_proto.RegisterType((*DecodeDownlinkMessageRequest)(nil), "ttn.lorawan.v3.DecodeDownlinkMessageRequest")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/message_services.proto", fileDescriptor_6fa32647f6f069ac)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/message_services.proto", fileDescriptor_6fa32647f6f069ac)
}

var fileDescriptor_6fa32647f6f069ac = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xbf, 0x8b, 0x13, 0x41,
	0x18, 0xcd, 0x5c, 0x3c, 0xe5, 0xd6, 0xe3, 0x08, 0x7b, 0x20, 0x61, 0x39, 0x26, 0xf1, 0x62, 0x11,
	0xd4, 0xec, 0x42, 0xd2, 0x0b, 0x17, 0x72, 0xe2, 0x21, 0xc2, 0xb1, 0xa0, 0x85, 0x70, 0x84, 0xc9,
	0xee, 0x97, 0xcd, 0x90, 0x64, 0x66, 0x9d, 0x99, 0x6c, 0x4c, 0x67, 0x63, 0x63, 0x65, 0x67, 0x61,
	0x63, 0xe9, 0xff, 0x60, 0x63, 0x79, 0xe5, 0x95, 0x56, 0x41, 0x37, 0x8d, 0xa5, 0xb5, 0x95, 0xec,
	0x8f, 0x90, 0x1f, 0x4b, 0xce, 0xeb, 0x14, 0xb4, 0x9b, 0x59, 0xde, 0xf7, 0xde, 0xbc, 0xef, 0xcd,
	0xb7, 0xa3, 0x55, 0x07, 0x5c, 0x90, 0x31, 0x61, 0x35, 0xa9, 0x88, 0xd3, 0xb7, 0x88, 0x4f, 0xad,
	0x21, 0x48, 0x49, 0x3c, 0x68, 0x4b, 0x10, 0x01, 0x75, 0x40, 0x9a, 0xbe, 0xe0, 0x8a, 0xeb, 0x7b,
	0x4a, 0x31, 0x33, 0x45, 0x9b, 0x41, 0xc3, 0x38, 0xf2, 0xa8, 0xea, 0x8d, 0x3a, 0xa6, 0xc3, 0x87,
	0x16, 0xb0, 0x80, 0x4f, 0x7c, 0xc1, 0x5f, 0x4e, 0xac, 0x18, 0xec, 0xd4, 0x3c, 0x60, 0xb5, 0x80,
	0x0c, 0xa8, 0x4b, 0x14, 0x58, 0x99, 0x45, 0x42, 0x69, 0xd4, 0x96, 0x28, 0x3c, 0xee, 0xf1, 0xa4,
	0xb8, 0x33, 0xea, 0xc6, 0xbb, 0x78, 0x13, 0xaf, 0x52, 0x78, 0x25, 0x7b, 0x56, 0xea, 0x02, 0x53,
	0xb4, 0x4b, 0x41, 0xa4, 0xc7, 0x34, 0xca, 0x1b, 0x0d, 0xa5, 0x88, 0xc3, 0xf7, 0x79, 0xed, 0xe0,
	0x98, 0x39, 0xdc, 0x85, 0x16, 0x1f, 0xb3, 0x01, 0x65, 0xfd, 0x27, 0x09, 0xc0, 0x86, 0x17, 0x23,
	0x90, 0x4a, 0x7f, 0xa4, 0xe5, 0xa9, 0x2b, 0x8b, 0xa8, 0x8c, 0xaa, 0x37, 0xeb, 0x77, 0xcc, 0x55,
	0xdf, 0xe6, 0x31, 0x73, 0x5b, 0x10, 0x35, 0xe6, 0x64, 0xa1, 0xdd, 0x2c, 0xfc, 0x6c, 0x6e, 0xbf,
	0x41, 0x5b, 0x05, 0x74, 0x3e, 0x2d, 0xe5, 0x2e, 0xa6, 0x25, 0x64, 0x47, 0x14, 0xfa, 0x6b, 0xa4,
	0xdd, 0x02, 0xe6, 0xb6, 0xdd, 0xb8, 0xa0, 0x1d, 0x80, 0x90, 0x94, 0xb3, 0x76, 0xc4, 0xbe, 0x15,
	0xb3, 0xdf, 0xdb, 0xc8, 0xfe, 0x2c, 0xc1, 0x2e, 0x8b, 0x54, 0x96, 0x45, 0xc2, 0x69, 0x69, 0x3f,
	0x03, 0x6e, 0x49, 0x7b, 0x1f, 0x32, 0x0c, 0x52, 0x7f, 0xac, 0xdd, 0x48, 0x9b, 0x50, 0xcc, 0xc7,
	0xba, 0x95, 0x75, 0xdd, 0x23, 0xdf, 0x1f, 0x50, 0x87, 0x28, 0xca, 0xd9, 0xbc, 0x2b, 0xcd, 0xdd,
	0x65, 0x3d, 0x7b, 0xce, 0xa0, 0x3f, 0xd0, 0x76, 0xba, 0x5c, 0x0c, 0x89, 0x52, 0x20, 0x8a, 0xd7,
	0xca, 0xa8, 0xba, 0x57, 0x2f, 0xaf, 0xd3, 0x9d, 0x92, 0xc9, 0x80, 0x13, 0xf7, 0xe1, 0x1c, 0x67,
	0x2f, 0x4a, 0xf4, 0x03, 0x6d, 0xc7, 0x27, 0x82, 0x0c, 0x21, 0xaa, 0xdf, 0x2e, 0xa3, 0xea, 0x8e,
	0xbd, 0xf8, 0x70, 0xf8, 0x2e, 0xaf, 0x19, 0x2d, 0x88, 0xd2, 0x79, 0xea, 0xff, 0x13, 0xd9, 0x9c,
	0xac, 0x67, 0x73, 0xfb, 0x92, 0x6c, 0x92, 0x9e, 0xfc, 0x99, 0x64, 0xa2, 0xb9, 0x49, 0x92, 0xf9,
	0x3f, 0x37, 0x7f, 0xdd, 0xdc, 0xd4, 0x3f, 0x6d, 0x69, 0x85, 0x34, 0x8f, 0x53, 0xc1, 0x1d, 0x90,
	0x92, 0x0b, 0xdd, 0xd1, 0xf6, 0x56, 0xff, 0x74, 0xfa, 0xfd, 0x6c, 0xe3, 0x36, 0x27, 0x6a, 0x5c,
	0xc5, 0xae, 0x7e, 0xa6, 0xed, 0x2e, 0x0f, 0xac, 0x7e, 0x77, 0xbd, 0x68, 0xf3, 0x38, 0x1b, 0xbf,
	0xbf, 0xeb, 0x91, 0x87, 0xd5, 0x5b, 0x97, 0xf5, 0x70, 0xd9, 0xad, 0xbc, 0x92, 0x87, 0xe6, 0xd9,
	0x97, 0x6f, 0x38, 0xf7, 0x2a, 0xc4, 0xe8, 0x63, 0x88, 0xd1, 0x79, 0x88, 0xd1, 0x45, 0x88, 0xd1,
	0xd7, 0x10, 0xa3, 0xef, 0x21, 0xce, 0xfd, 0x08, 0x31, 0x7a, 0x3b, 0xc3, 0xb9, 0x0f, 0x33, 0x9c,
	0xfb, 0x3c, 0xc3, 0xe8, 0xb9, 0xe5, 0x71, 0x53, 0xf5, 0x40, 0xf5, 0x28, 0xf3, 0xa4, 0xc9, 0x40,
	0x8d, 0xb9, 0xe8, 0x5b, 0xab, 0x0f, 0x4f, 0xd0, 0xb0, 0xfc, 0xbe, 0x67, 0x29, 0xc5, 0xfc, 0x4e,
	0xe7, 0x7a, 0xfc, 0xf2, 0x34, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x07, 0xcd, 0x62, 0x6e,
	0x07, 0x00, 0x00,
}

func (this *EncodeDownlinkMessageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EncodeDownlinkMessageRequest)
	if !ok {
		that2, ok := that.(EncodeDownlinkMessageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.EndDeviceIdentifiers.Equal(&that1.EndDeviceIdentifiers) {
		return false
	}
	if !this.EndDeviceVersionIDs.Equal(&that1.EndDeviceVersionIDs) {
		return false
	}
	if !this.Message.Equal(&that1.Message) {
		return false
	}
	if this.Formatter != that1.Formatter {
		return false
	}
	if this.Parameter != that1.Parameter {
		return false
	}
	return true
}
func (this *DecodeUplinkMessageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DecodeUplinkMessageRequest)
	if !ok {
		that2, ok := that.(DecodeUplinkMessageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.EndDeviceIdentifiers.Equal(&that1.EndDeviceIdentifiers) {
		return false
	}
	if !this.EndDeviceVersionIDs.Equal(&that1.EndDeviceVersionIDs) {
		return false
	}
	if !this.Message.Equal(&that1.Message) {
		return false
	}
	if this.Formatter != that1.Formatter {
		return false
	}
	if this.Parameter != that1.Parameter {
		return false
	}
	return true
}
func (this *DecodeDownlinkMessageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DecodeDownlinkMessageRequest)
	if !ok {
		that2, ok := that.(DecodeDownlinkMessageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.EndDeviceIdentifiers.Equal(&that1.EndDeviceIdentifiers) {
		return false
	}
	if !this.EndDeviceVersionIDs.Equal(&that1.EndDeviceVersionIDs) {
		return false
	}
	if !this.Message.Equal(&that1.Message) {
		return false
	}
	if this.Formatter != that1.Formatter {
		return false
	}
	if this.Parameter != that1.Parameter {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageProcessorClient is the client API for MessageProcessor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageProcessorClient interface {
	EncodeDownlink(ctx context.Context, in *EncodeDownlinkMessageRequest, opts ...grpc.CallOption) (*ApplicationDownlink, error)
	DecodeUplink(ctx context.Context, in *DecodeUplinkMessageRequest, opts ...grpc.CallOption) (*ApplicationUplink, error)
	DecodeDownlink(ctx context.Context, in *DecodeDownlinkMessageRequest, opts ...grpc.CallOption) (*ApplicationDownlink, error)
}

type messageProcessorClient struct {
	cc *grpc.ClientConn
}

func NewMessageProcessorClient(cc *grpc.ClientConn) MessageProcessorClient {
	return &messageProcessorClient{cc}
}

func (c *messageProcessorClient) EncodeDownlink(ctx context.Context, in *EncodeDownlinkMessageRequest, opts ...grpc.CallOption) (*ApplicationDownlink, error) {
	out := new(ApplicationDownlink)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.MessageProcessor/EncodeDownlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageProcessorClient) DecodeUplink(ctx context.Context, in *DecodeUplinkMessageRequest, opts ...grpc.CallOption) (*ApplicationUplink, error) {
	out := new(ApplicationUplink)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.MessageProcessor/DecodeUplink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageProcessorClient) DecodeDownlink(ctx context.Context, in *DecodeDownlinkMessageRequest, opts ...grpc.CallOption) (*ApplicationDownlink, error) {
	out := new(ApplicationDownlink)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.MessageProcessor/DecodeDownlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageProcessorServer is the server API for MessageProcessor service.
type MessageProcessorServer interface {
	EncodeDownlink(context.Context, *EncodeDownlinkMessageRequest) (*ApplicationDownlink, error)
	DecodeUplink(context.Context, *DecodeUplinkMessageRequest) (*ApplicationUplink, error)
	DecodeDownlink(context.Context, *DecodeDownlinkMessageRequest) (*ApplicationDownlink, error)
}

// UnimplementedMessageProcessorServer can be embedded to have forward compatible implementations.
type UnimplementedMessageProcessorServer struct {
}

func (*UnimplementedMessageProcessorServer) EncodeDownlink(ctx context.Context, req *EncodeDownlinkMessageRequest) (*ApplicationDownlink, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EncodeDownlink not implemented")
}
func (*UnimplementedMessageProcessorServer) DecodeUplink(ctx context.Context, req *DecodeUplinkMessageRequest) (*ApplicationUplink, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeUplink not implemented")
}
func (*UnimplementedMessageProcessorServer) DecodeDownlink(ctx context.Context, req *DecodeDownlinkMessageRequest) (*ApplicationDownlink, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecodeDownlink not implemented")
}

func RegisterMessageProcessorServer(s *grpc.Server, srv MessageProcessorServer) {
	s.RegisterService(&_MessageProcessor_serviceDesc, srv)
}

func _MessageProcessor_EncodeDownlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncodeDownlinkMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageProcessorServer).EncodeDownlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.MessageProcessor/EncodeDownlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageProcessorServer).EncodeDownlink(ctx, req.(*EncodeDownlinkMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageProcessor_DecodeUplink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeUplinkMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageProcessorServer).DecodeUplink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.MessageProcessor/DecodeUplink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageProcessorServer).DecodeUplink(ctx, req.(*DecodeUplinkMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageProcessor_DecodeDownlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecodeDownlinkMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageProcessorServer).DecodeDownlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.MessageProcessor/DecodeDownlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageProcessorServer).DecodeDownlink(ctx, req.(*DecodeDownlinkMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageProcessor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.MessageProcessor",
	HandlerType: (*MessageProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EncodeDownlink",
			Handler:    _MessageProcessor_EncodeDownlink_Handler,
		},
		{
			MethodName: "DecodeUplink",
			Handler:    _MessageProcessor_DecodeUplink_Handler,
		},
		{
			MethodName: "DecodeDownlink",
			Handler:    _MessageProcessor_DecodeDownlink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/message_services.proto",
}

func (m *EncodeDownlinkMessageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EncodeDownlinkMessageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EncodeDownlinkMessageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Parameter) > 0 {
		i -= len(m.Parameter)
		copy(dAtA[i:], m.Parameter)
		i = encodeVarintMessageServices(dAtA, i, uint64(len(m.Parameter)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Formatter != 0 {
		i = encodeVarintMessageServices(dAtA, i, uint64(m.Formatter))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.EndDeviceVersionIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.EndDeviceIdentifiers.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *DecodeUplinkMessageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecodeUplinkMessageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecodeUplinkMessageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Parameter) > 0 {
		i -= len(m.Parameter)
		copy(dAtA[i:], m.Parameter)
		i = encodeVarintMessageServices(dAtA, i, uint64(len(m.Parameter)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Formatter != 0 {
		i = encodeVarintMessageServices(dAtA, i, uint64(m.Formatter))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.EndDeviceVersionIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.EndDeviceIdentifiers.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *DecodeDownlinkMessageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecodeDownlinkMessageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecodeDownlinkMessageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Parameter) > 0 {
		i -= len(m.Parameter)
		copy(dAtA[i:], m.Parameter)
		i = encodeVarintMessageServices(dAtA, i, uint64(len(m.Parameter)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Formatter != 0 {
		i = encodeVarintMessageServices(dAtA, i, uint64(m.Formatter))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.EndDeviceVersionIDs.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.EndDeviceIdentifiers.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMessageServices(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMessageServices(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessageServices(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EncodeDownlinkMessageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.EndDeviceIdentifiers.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.EndDeviceVersionIDs.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.Message.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	if m.Formatter != 0 {
		n += 1 + sovMessageServices(uint64(m.Formatter))
	}
	l = len(m.Parameter)
	if l > 0 {
		n += 1 + l + sovMessageServices(uint64(l))
	}
	return n
}

func (m *DecodeUplinkMessageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.EndDeviceIdentifiers.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.EndDeviceVersionIDs.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.Message.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	if m.Formatter != 0 {
		n += 1 + sovMessageServices(uint64(m.Formatter))
	}
	l = len(m.Parameter)
	if l > 0 {
		n += 1 + l + sovMessageServices(uint64(l))
	}
	return n
}

func (m *DecodeDownlinkMessageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.EndDeviceIdentifiers.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.EndDeviceVersionIDs.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	l = m.Message.Size()
	n += 1 + l + sovMessageServices(uint64(l))
	if m.Formatter != 0 {
		n += 1 + sovMessageServices(uint64(m.Formatter))
	}
	l = len(m.Parameter)
	if l > 0 {
		n += 1 + l + sovMessageServices(uint64(l))
	}
	return n
}

func sovMessageServices(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessageServices(x uint64) (n int) {
	return sovMessageServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *EncodeDownlinkMessageRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EncodeDownlinkMessageRequest{`,
		`EndDeviceIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceIdentifiers), "EndDeviceIdentifiers", "EndDeviceIdentifiers", 1), `&`, ``, 1) + `,`,
		`EndDeviceVersionIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceVersionIDs), "EndDeviceVersionIdentifiers", "EndDeviceVersionIdentifiers", 1), `&`, ``, 1) + `,`,
		`Message:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Message), "ApplicationDownlink", "ApplicationDownlink", 1), `&`, ``, 1) + `,`,
		`Formatter:` + fmt.Sprintf("%v", this.Formatter) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DecodeUplinkMessageRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DecodeUplinkMessageRequest{`,
		`EndDeviceIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceIdentifiers), "EndDeviceIdentifiers", "EndDeviceIdentifiers", 1), `&`, ``, 1) + `,`,
		`EndDeviceVersionIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceVersionIDs), "EndDeviceVersionIdentifiers", "EndDeviceVersionIdentifiers", 1), `&`, ``, 1) + `,`,
		`Message:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Message), "ApplicationUplink", "ApplicationUplink", 1), `&`, ``, 1) + `,`,
		`Formatter:` + fmt.Sprintf("%v", this.Formatter) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DecodeDownlinkMessageRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DecodeDownlinkMessageRequest{`,
		`EndDeviceIdentifiers:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceIdentifiers), "EndDeviceIdentifiers", "EndDeviceIdentifiers", 1), `&`, ``, 1) + `,`,
		`EndDeviceVersionIDs:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.EndDeviceVersionIDs), "EndDeviceVersionIdentifiers", "EndDeviceVersionIdentifiers", 1), `&`, ``, 1) + `,`,
		`Message:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Message), "ApplicationDownlink", "ApplicationDownlink", 1), `&`, ``, 1) + `,`,
		`Formatter:` + fmt.Sprintf("%v", this.Formatter) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringMessageServices(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *EncodeDownlinkMessageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EncodeDownlinkMessageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EncodeDownlinkMessageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceIdentifiers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceIdentifiers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceVersionIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceVersionIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Formatter", wireType)
			}
			m.Formatter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Formatter |= PayloadFormatter(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DecodeUplinkMessageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DecodeUplinkMessageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DecodeUplinkMessageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceIdentifiers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceIdentifiers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceVersionIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceVersionIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Formatter", wireType)
			}
			m.Formatter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Formatter |= PayloadFormatter(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DecodeDownlinkMessageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DecodeDownlinkMessageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DecodeDownlinkMessageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceIdentifiers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceIdentifiers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDeviceVersionIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EndDeviceVersionIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Formatter", wireType)
			}
			m.Formatter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Formatter |= PayloadFormatter(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessageServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageServices
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessageServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessageServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessageServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessageServices
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessageServices
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessageServices
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessageServices        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessageServices          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessageServices = fmt.Errorf("proto: unexpected end of group")
)
