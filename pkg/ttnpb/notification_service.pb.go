// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/notification_service.proto

package ttnpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotificationReceiver int32

const (
	NotificationReceiver_NOTIFICATION_RECEIVER_UNKNOWN NotificationReceiver = 0
	// Notification is received by collaborators of the entity.
	// If the collaborator is an organization, the notification is received by organization members.
	NotificationReceiver_NOTIFICATION_RECEIVER_COLLABORATOR NotificationReceiver = 1
	// Notification is received by administrative contact of the entity.
	// If this is an organization, the notification is received by organization members.
	NotificationReceiver_NOTIFICATION_RECEIVER_ADMINISTRATIVE_CONTACT NotificationReceiver = 3
	// Notification is received by technical contact of the entity.
	// If this is an organization, the notification is received by organization members.
	NotificationReceiver_NOTIFICATION_RECEIVER_TECHNICAL_CONTACT NotificationReceiver = 4
)

var NotificationReceiver_name = map[int32]string{
	0: "NOTIFICATION_RECEIVER_UNKNOWN",
	1: "NOTIFICATION_RECEIVER_COLLABORATOR",
	3: "NOTIFICATION_RECEIVER_ADMINISTRATIVE_CONTACT",
	4: "NOTIFICATION_RECEIVER_TECHNICAL_CONTACT",
}

var NotificationReceiver_value = map[string]int32{
	"NOTIFICATION_RECEIVER_UNKNOWN":                0,
	"NOTIFICATION_RECEIVER_COLLABORATOR":           1,
	"NOTIFICATION_RECEIVER_ADMINISTRATIVE_CONTACT": 3,
	"NOTIFICATION_RECEIVER_TECHNICAL_CONTACT":      4,
}

func (x NotificationReceiver) String() string {
	return proto.EnumName(NotificationReceiver_name, int32(x))
}

func (NotificationReceiver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{0}
}

type NotificationStatus int32

const (
	NotificationStatus_NOTIFICATION_STATUS_UNSEEN   NotificationStatus = 0
	NotificationStatus_NOTIFICATION_STATUS_SEEN     NotificationStatus = 1
	NotificationStatus_NOTIFICATION_STATUS_ARCHIVED NotificationStatus = 2
)

var NotificationStatus_name = map[int32]string{
	0: "NOTIFICATION_STATUS_UNSEEN",
	1: "NOTIFICATION_STATUS_SEEN",
	2: "NOTIFICATION_STATUS_ARCHIVED",
}

var NotificationStatus_value = map[string]int32{
	"NOTIFICATION_STATUS_UNSEEN":   0,
	"NOTIFICATION_STATUS_SEEN":     1,
	"NOTIFICATION_STATUS_ARCHIVED": 2,
}

func (x NotificationStatus) String() string {
	return proto.EnumName(NotificationStatus_name, int32(x))
}

func (NotificationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{1}
}

type Notification struct {
	// The immutable ID of the notification. Generated by the server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time when the notification was triggered.
	CreatedAt *types.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The entity this notification is about.
	EntityIds *EntityIdentifiers `protobuf:"bytes,3,opt,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	// The type of this notification.
	NotificationType string `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	// The data related to the notification.
	Data *types.Any `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// If the notification was triggered by a user action, this contains the identifiers of the user that triggered the notification.
	SenderIds *UserIdentifiers `protobuf:"bytes,6,opt,name=sender_ids,json=senderIds,proto3" json:"sender_ids,omitempty"`
	// Relation of the notification receiver to the entity.
	Receivers []NotificationReceiver `protobuf:"varint,8,rep,packed,name=receivers,proto3,enum=ttn.lorawan.v3.NotificationReceiver" json:"receivers,omitempty"`
	// Whether an email was sent for the notification.
	Email bool `protobuf:"varint,9,opt,name=email,proto3" json:"email,omitempty"`
	// The status of the notification.
	Status NotificationStatus `protobuf:"varint,10,opt,name=status,proto3,enum=ttn.lorawan.v3.NotificationStatus" json:"status,omitempty"`
	// The time when the notification status was updated.
	StatusUpdatedAt      *types.Timestamp `protobuf:"bytes,11,opt,name=status_updated_at,json=statusUpdatedAt,proto3" json:"status_updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{0}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Notification) GetEntityIds() *EntityIdentifiers {
	if m != nil {
		return m.EntityIds
	}
	return nil
}

func (m *Notification) GetNotificationType() string {
	if m != nil {
		return m.NotificationType
	}
	return ""
}

func (m *Notification) GetData() *types.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Notification) GetSenderIds() *UserIdentifiers {
	if m != nil {
		return m.SenderIds
	}
	return nil
}

func (m *Notification) GetReceivers() []NotificationReceiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

func (m *Notification) GetEmail() bool {
	if m != nil {
		return m.Email
	}
	return false
}

func (m *Notification) GetStatus() NotificationStatus {
	if m != nil {
		return m.Status
	}
	return NotificationStatus_NOTIFICATION_STATUS_UNSEEN
}

func (m *Notification) GetStatusUpdatedAt() *types.Timestamp {
	if m != nil {
		return m.StatusUpdatedAt
	}
	return nil
}

type CreateNotificationRequest struct {
	// The entity this notification is about.
	EntityIds *EntityIdentifiers `protobuf:"bytes,1,opt,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	// The type of this notification.
	NotificationType string `protobuf:"bytes,2,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	// The data related to the notification.
	Data *types.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// If the notification was triggered by a user action, this contains the identifiers of the user that triggered the notification.
	SenderIds *UserIdentifiers `protobuf:"bytes,4,opt,name=sender_ids,json=senderIds,proto3" json:"sender_ids,omitempty"`
	// Receivers of the notification.
	Receivers []NotificationReceiver `protobuf:"varint,5,rep,packed,name=receivers,proto3,enum=ttn.lorawan.v3.NotificationReceiver" json:"receivers,omitempty"`
	// Whether an email should be sent for the notification.
	Email                bool     `protobuf:"varint,6,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNotificationRequest) Reset()         { *m = CreateNotificationRequest{} }
func (m *CreateNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNotificationRequest) ProtoMessage()    {}
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{1}
}
func (m *CreateNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNotificationRequest.Unmarshal(m, b)
}
func (m *CreateNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNotificationRequest.Marshal(b, m, deterministic)
}
func (m *CreateNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNotificationRequest.Merge(m, src)
}
func (m *CreateNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNotificationRequest.Size(m)
}
func (m *CreateNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNotificationRequest proto.InternalMessageInfo

func (m *CreateNotificationRequest) GetEntityIds() *EntityIdentifiers {
	if m != nil {
		return m.EntityIds
	}
	return nil
}

func (m *CreateNotificationRequest) GetNotificationType() string {
	if m != nil {
		return m.NotificationType
	}
	return ""
}

func (m *CreateNotificationRequest) GetData() *types.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateNotificationRequest) GetSenderIds() *UserIdentifiers {
	if m != nil {
		return m.SenderIds
	}
	return nil
}

func (m *CreateNotificationRequest) GetReceivers() []NotificationReceiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

func (m *CreateNotificationRequest) GetEmail() bool {
	if m != nil {
		return m.Email
	}
	return false
}

type CreateNotificationResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNotificationResponse) Reset()         { *m = CreateNotificationResponse{} }
func (m *CreateNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNotificationResponse) ProtoMessage()    {}
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{2}
}
func (m *CreateNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNotificationResponse.Unmarshal(m, b)
}
func (m *CreateNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNotificationResponse.Marshal(b, m, deterministic)
}
func (m *CreateNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNotificationResponse.Merge(m, src)
}
func (m *CreateNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNotificationResponse.Size(m)
}
func (m *CreateNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNotificationResponse proto.InternalMessageInfo

func (m *CreateNotificationResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListNotificationsRequest struct {
	// The IDs of the receiving user.
	ReceiverIds *UserIdentifiers `protobuf:"bytes,1,opt,name=receiver_ids,json=receiverIds,proto3" json:"receiver_ids,omitempty"`
	// Select notifications with these statuses.
	// An empty list is interpreted as "all".
	Status []NotificationStatus `protobuf:"varint,2,rep,packed,name=status,proto3,enum=ttn.lorawan.v3.NotificationStatus" json:"status,omitempty"`
	// Limit the number of results per page.
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Page number for pagination. 0 is interpreted as 1.
	Page                 uint32   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNotificationsRequest) Reset()         { *m = ListNotificationsRequest{} }
func (m *ListNotificationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNotificationsRequest) ProtoMessage()    {}
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{3}
}
func (m *ListNotificationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotificationsRequest.Unmarshal(m, b)
}
func (m *ListNotificationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotificationsRequest.Marshal(b, m, deterministic)
}
func (m *ListNotificationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotificationsRequest.Merge(m, src)
}
func (m *ListNotificationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNotificationsRequest.Size(m)
}
func (m *ListNotificationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotificationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotificationsRequest proto.InternalMessageInfo

func (m *ListNotificationsRequest) GetReceiverIds() *UserIdentifiers {
	if m != nil {
		return m.ReceiverIds
	}
	return nil
}

func (m *ListNotificationsRequest) GetStatus() []NotificationStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListNotificationsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListNotificationsRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListNotificationsResponse struct {
	Notifications        []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListNotificationsResponse) Reset()         { *m = ListNotificationsResponse{} }
func (m *ListNotificationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListNotificationsResponse) ProtoMessage()    {}
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{4}
}
func (m *ListNotificationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotificationsResponse.Unmarshal(m, b)
}
func (m *ListNotificationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotificationsResponse.Marshal(b, m, deterministic)
}
func (m *ListNotificationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotificationsResponse.Merge(m, src)
}
func (m *ListNotificationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListNotificationsResponse.Size(m)
}
func (m *ListNotificationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotificationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotificationsResponse proto.InternalMessageInfo

func (m *ListNotificationsResponse) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type UpdateNotificationStatusRequest struct {
	// The IDs of the receiving user.
	ReceiverIds *UserIdentifiers `protobuf:"bytes,1,opt,name=receiver_ids,json=receiverIds,proto3" json:"receiver_ids,omitempty"`
	// The IDs of the notifications to update the status of.
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// The status to set on the notifications.
	Status               NotificationStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ttn.lorawan.v3.NotificationStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateNotificationStatusRequest) Reset()         { *m = UpdateNotificationStatusRequest{} }
func (m *UpdateNotificationStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNotificationStatusRequest) ProtoMessage()    {}
func (*UpdateNotificationStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{5}
}
func (m *UpdateNotificationStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNotificationStatusRequest.Unmarshal(m, b)
}
func (m *UpdateNotificationStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNotificationStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNotificationStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNotificationStatusRequest.Merge(m, src)
}
func (m *UpdateNotificationStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNotificationStatusRequest.Size(m)
}
func (m *UpdateNotificationStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNotificationStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNotificationStatusRequest proto.InternalMessageInfo

func (m *UpdateNotificationStatusRequest) GetReceiverIds() *UserIdentifiers {
	if m != nil {
		return m.ReceiverIds
	}
	return nil
}

func (m *UpdateNotificationStatusRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *UpdateNotificationStatusRequest) GetStatus() NotificationStatus {
	if m != nil {
		return m.Status
	}
	return NotificationStatus_NOTIFICATION_STATUS_UNSEEN
}

type EntityStateChangedNotification struct {
	State                State    `protobuf:"varint,1,opt,name=state,proto3,enum=ttn.lorawan.v3.State" json:"state,omitempty"`
	StateDescription     string   `protobuf:"bytes,2,opt,name=state_description,json=stateDescription,proto3" json:"state_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityStateChangedNotification) Reset()         { *m = EntityStateChangedNotification{} }
func (m *EntityStateChangedNotification) String() string { return proto.CompactTextString(m) }
func (*EntityStateChangedNotification) ProtoMessage()    {}
func (*EntityStateChangedNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_62db76852b39e787, []int{6}
}
func (m *EntityStateChangedNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityStateChangedNotification.Unmarshal(m, b)
}
func (m *EntityStateChangedNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityStateChangedNotification.Marshal(b, m, deterministic)
}
func (m *EntityStateChangedNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityStateChangedNotification.Merge(m, src)
}
func (m *EntityStateChangedNotification) XXX_Size() int {
	return xxx_messageInfo_EntityStateChangedNotification.Size(m)
}
func (m *EntityStateChangedNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityStateChangedNotification.DiscardUnknown(m)
}

var xxx_messageInfo_EntityStateChangedNotification proto.InternalMessageInfo

func (m *EntityStateChangedNotification) GetState() State {
	if m != nil {
		return m.State
	}
	return State_STATE_REQUESTED
}

func (m *EntityStateChangedNotification) GetStateDescription() string {
	if m != nil {
		return m.StateDescription
	}
	return ""
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.NotificationReceiver", NotificationReceiver_name, NotificationReceiver_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.NotificationReceiver", NotificationReceiver_name, NotificationReceiver_value)
	proto.RegisterEnum("ttn.lorawan.v3.NotificationStatus", NotificationStatus_name, NotificationStatus_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.NotificationStatus", NotificationStatus_name, NotificationStatus_value)
	proto.RegisterType((*Notification)(nil), "ttn.lorawan.v3.Notification")
	golang_proto.RegisterType((*Notification)(nil), "ttn.lorawan.v3.Notification")
	proto.RegisterType((*CreateNotificationRequest)(nil), "ttn.lorawan.v3.CreateNotificationRequest")
	golang_proto.RegisterType((*CreateNotificationRequest)(nil), "ttn.lorawan.v3.CreateNotificationRequest")
	proto.RegisterType((*CreateNotificationResponse)(nil), "ttn.lorawan.v3.CreateNotificationResponse")
	golang_proto.RegisterType((*CreateNotificationResponse)(nil), "ttn.lorawan.v3.CreateNotificationResponse")
	proto.RegisterType((*ListNotificationsRequest)(nil), "ttn.lorawan.v3.ListNotificationsRequest")
	golang_proto.RegisterType((*ListNotificationsRequest)(nil), "ttn.lorawan.v3.ListNotificationsRequest")
	proto.RegisterType((*ListNotificationsResponse)(nil), "ttn.lorawan.v3.ListNotificationsResponse")
	golang_proto.RegisterType((*ListNotificationsResponse)(nil), "ttn.lorawan.v3.ListNotificationsResponse")
	proto.RegisterType((*UpdateNotificationStatusRequest)(nil), "ttn.lorawan.v3.UpdateNotificationStatusRequest")
	golang_proto.RegisterType((*UpdateNotificationStatusRequest)(nil), "ttn.lorawan.v3.UpdateNotificationStatusRequest")
	proto.RegisterType((*EntityStateChangedNotification)(nil), "ttn.lorawan.v3.EntityStateChangedNotification")
	golang_proto.RegisterType((*EntityStateChangedNotification)(nil), "ttn.lorawan.v3.EntityStateChangedNotification")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/notification_service.proto", fileDescriptor_62db76852b39e787)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/notification_service.proto", fileDescriptor_62db76852b39e787)
}

var fileDescriptor_62db76852b39e787 = []byte{
	// 1170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcf, 0x6e, 0xdb, 0xc6,
	0x13, 0xfe, 0xad, 0xfe, 0x45, 0x5a, 0x3b, 0x8a, 0xbc, 0x71, 0x7e, 0xa5, 0x14, 0xc7, 0x51, 0xd8,
	0x20, 0x55, 0x94, 0x88, 0x0c, 0x14, 0x38, 0x40, 0x73, 0x28, 0x4a, 0xca, 0x0a, 0xa2, 0xc4, 0x95,
	0x00, 0x9a, 0x72, 0x81, 0x5c, 0x08, 0x5a, 0xdc, 0xd0, 0xac, 0x25, 0x92, 0xe5, 0xae, 0x94, 0x0a,
	0x45, 0x81, 0x22, 0xc7, 0x1e, 0x5a, 0xd4, 0xbd, 0xf4, 0xd2, 0x17, 0xf0, 0x53, 0xf4, 0x1d, 0x7a,
	0x2e, 0x7a, 0x68, 0x0f, 0x69, 0x1e, 0xa0, 0x07, 0x9f, 0x0a, 0x2e, 0x29, 0x9b, 0x94, 0x18, 0x47,
	0x3e, 0xf4, 0x46, 0x72, 0xbe, 0x99, 0xf9, 0x66, 0xbe, 0x99, 0xe5, 0xc2, 0xfb, 0x43, 0xc7, 0xd3,
	0x5f, 0xe9, 0x76, 0x83, 0x50, 0x7d, 0x70, 0x28, 0xea, 0xae, 0x25, 0xda, 0x0e, 0xb5, 0x5e, 0x5a,
	0x03, 0x9d, 0x5a, 0x8e, 0xad, 0x11, 0xec, 0x4d, 0xac, 0x01, 0x16, 0x5c, 0xcf, 0xa1, 0x0e, 0x2a,
	0x52, 0x6a, 0x0b, 0xa1, 0x87, 0x30, 0x79, 0x58, 0x91, 0x4c, 0x8b, 0x1e, 0x8c, 0xf7, 0x85, 0x81,
	0x33, 0x12, 0xb1, 0x3d, 0x71, 0xa6, 0xae, 0xe7, 0x7c, 0x35, 0x15, 0x19, 0x78, 0xd0, 0x30, 0xb1,
	0xdd, 0x98, 0xe8, 0x43, 0xcb, 0xd0, 0x29, 0x16, 0x17, 0x1e, 0x82, 0x90, 0x95, 0x46, 0x24, 0x84,
	0xe9, 0x98, 0x4e, 0xe0, 0xbc, 0x3f, 0x7e, 0xc9, 0xde, 0xd8, 0x0b, 0x7b, 0x0a, 0xe1, 0xad, 0x08,
	0x5c, 0x3d, 0xc0, 0xea, 0x81, 0x65, 0x9b, 0xa4, 0x63, 0x1b, 0x63, 0x42, 0x3d, 0x0b, 0x93, 0x68,
	0x6a, 0xd3, 0x69, 0x7c, 0x41, 0x1c, 0x5b, 0xd4, 0x6d, 0xdb, 0xa1, 0xac, 0x1a, 0x12, 0x06, 0xd9,
	0x30, 0x1d, 0xc7, 0x1c, 0x62, 0x56, 0xed, 0xa2, 0xb5, 0x1c, 0x5a, 0x4f, 0x89, 0xe8, 0xf6, 0x34,
	0x34, 0x5d, 0x9f, 0x37, 0xe1, 0x91, 0x4b, 0x67, 0xc6, 0x9b, 0xf3, 0x46, 0x6a, 0x8d, 0x30, 0xa1,
	0xfa, 0xc8, 0x0d, 0x01, 0x1f, 0x2e, 0xf6, 0xda, 0x32, 0xb0, 0xed, 0x77, 0x1b, 0x7b, 0xb3, 0xec,
	0x37, 0x16, 0x41, 0xd8, 0x1e, 0x8f, 0x42, 0x33, 0x7f, 0x9c, 0x81, 0xab, 0xdd, 0x88, 0x40, 0xa8,
	0x08, 0x53, 0x96, 0xc1, 0x81, 0x2a, 0xa8, 0x15, 0x94, 0x94, 0x65, 0xa0, 0x8f, 0x21, 0x1c, 0x78,
	0x58, 0xa7, 0xd8, 0xd0, 0x74, 0xca, 0xa5, 0xaa, 0xa0, 0xb6, 0xd2, 0xac, 0x08, 0x01, 0x35, 0x61,
	0x46, 0x4d, 0x50, 0x67, 0xd4, 0x94, 0x42, 0x88, 0x96, 0x28, 0xfa, 0x14, 0x42, 0x9f, 0x0d, 0x9d,
	0x6a, 0x96, 0x41, 0xb8, 0x34, 0x73, 0xbd, 0x25, 0xc4, 0x25, 0x17, 0xda, 0x0c, 0xd1, 0x39, 0xe3,
	0xad, 0x14, 0x70, 0xf8, 0x89, 0xa0, 0x7b, 0x70, 0x2d, 0x36, 0x3d, 0x74, 0xea, 0x62, 0x2e, 0xc3,
	0xb8, 0x95, 0xa2, 0x06, 0x75, 0xea, 0x62, 0x54, 0x83, 0x19, 0x43, 0xa7, 0x3a, 0x97, 0x65, 0x89,
	0xd6, 0x17, 0x38, 0x4a, 0xf6, 0x54, 0x61, 0x08, 0xf4, 0x09, 0x84, 0x04, 0xdb, 0x06, 0xf6, 0x18,
	0xb1, 0x1c, 0xc3, 0xdf, 0x9c, 0x27, 0xd6, 0x27, 0xd8, 0x8b, 0xd1, 0x0a, 0x5c, 0x7c, 0x5a, 0x32,
	0x2c, 0x78, 0x78, 0x80, 0xad, 0x09, 0xf6, 0x08, 0x97, 0xaf, 0xa6, 0x6b, 0xc5, 0xe6, 0xed, 0x79,
	0xf7, 0x68, 0x53, 0x95, 0x10, 0xac, 0x9c, 0xb9, 0xa1, 0x75, 0x98, 0xc5, 0x23, 0xdd, 0x1a, 0x72,
	0x85, 0x2a, 0xa8, 0xe5, 0x95, 0xe0, 0x05, 0x3d, 0x86, 0x39, 0x42, 0x75, 0x3a, 0x26, 0x1c, 0xac,
	0x82, 0x5a, 0xb1, 0xc9, 0x9f, 0x17, 0x76, 0x97, 0x21, 0x95, 0xd0, 0x03, 0x3d, 0x81, 0x6b, 0xc1,
	0x93, 0x36, 0x76, 0x8d, 0x99, 0x60, 0x2b, 0xef, 0x15, 0xec, 0x4a, 0xe0, 0xd4, 0x0f, 0x7c, 0x24,
	0xfa, 0x2c, 0x93, 0xbf, 0x54, 0xca, 0x2b, 0x08, 0x4f, 0xb0, 0x4d, 0x35, 0xd7, 0x72, 0xf1, 0xd0,
	0xb2, 0xb1, 0xdf, 0x29, 0xfe, 0x9f, 0x14, 0x2c, 0xb7, 0x98, 0xbc, 0xf1, 0xea, 0xbe, 0x1c, 0x63,
	0x42, 0xd1, 0xb3, 0x98, 0xdc, 0x60, 0x49, 0xb9, 0xe5, 0xfc, 0x89, 0x9c, 0xfd, 0x0e, 0xa4, 0x4a,
	0x20, 0x2a, 0xfc, 0xa3, 0x24, 0xe1, 0xfd, 0xe1, 0x2b, 0xc8, 0x85, 0x13, 0x39, 0xe7, 0x65, 0x4a,
	0x80, 0x33, 0xce, 0x99, 0x81, 0xf4, 0x05, 0x67, 0x20, 0x73, 0xe1, 0x19, 0xe8, 0x47, 0x67, 0x20,
	0xbb, 0xfc, 0x0c, 0xc8, 0x6b, 0x27, 0x72, 0xf1, 0x08, 0xac, 0xe4, 0x01, 0x07, 0xf8, 0xec, 0xeb,
	0xa0, 0xf0, 0x84, 0xb1, 0xc8, 0x45, 0xc6, 0x82, 0xbf, 0x0f, 0x2b, 0x49, 0x7d, 0x27, 0xae, 0x63,
	0x13, 0x3c, 0xbf, 0xb2, 0xfc, 0xdf, 0x00, 0x72, 0x3b, 0x16, 0xa1, 0x51, 0x30, 0x99, 0xa9, 0xb4,
	0x03, 0x57, 0x67, 0xd9, 0x22, 0x3a, 0xbd, 0xaf, 0xf2, 0x88, 0x4a, 0x2b, 0x33, 0x77, 0xbf, 0x0b,
	0xcf, 0x4f, 0xe7, 0x35, 0xc5, 0x5a, 0xb0, 0xc4, 0xbc, 0xca, 0x57, 0x4e, 0xe4, 0xd5, 0x23, 0x50,
	0x38, 0x2b, 0x7f, 0x36, 0xc0, 0x9b, 0x30, 0x3b, 0xb4, 0x46, 0x16, 0x65, 0xea, 0x5d, 0x66, 0x29,
	0xeb, 0x69, 0xee, 0xcd, 0x25, 0x25, 0xf8, 0x8c, 0x10, 0xcc, 0xb8, 0xba, 0x19, 0x1c, 0x00, 0x97,
	0x15, 0xf6, 0xcc, 0x6b, 0xb0, 0x9c, 0x50, 0x6a, 0xd8, 0x18, 0x19, 0x5e, 0x8e, 0x4e, 0x88, 0x5f,
	0x6c, 0xba, 0xb6, 0xd2, 0xdc, 0x38, 0x57, 0xa7, 0xb8, 0x0b, 0xff, 0x3b, 0x80, 0x37, 0x83, 0xdd,
	0x48, 0x58, 0xbd, 0xff, 0xa4, 0xa7, 0x77, 0x60, 0xda, 0x0f, 0xe2, 0x37, 0xb4, 0x20, 0xaf, 0x9f,
	0xc8, 0x6b, 0x47, 0xa0, 0x98, 0x07, 0xa5, 0x37, 0x97, 0xfc, 0x8e, 0x79, 0xe9, 0x9f, 0xc1, 0x6d,
	0xc5, 0x07, 0xa0, 0xed, 0xd3, 0xde, 0xa7, 0x97, 0x3d, 0x2b, 0x58, 0xca, 0x58, 0xd3, 0xf9, 0xef,
	0x01, 0xdc, 0x0c, 0x96, 0xd2, 0x87, 0xe0, 0xd6, 0x81, 0x6e, 0x9b, 0xd8, 0x88, 0xfd, 0x12, 0xb6,
	0x60, 0xd6, 0x07, 0x63, 0x56, 0x57, 0xb1, 0x79, 0x6d, 0x3e, 0x0f, 0x73, 0x8c, 0x84, 0x0e, 0xd0,
	0x68, 0x2b, 0x38, 0x8f, 0xb0, 0x66, 0x60, 0x32, 0xf0, 0x2c, 0xd7, 0x8f, 0x15, 0xee, 0xb0, 0x8f,
	0xf5, 0xd2, 0xdc, 0xb7, 0x40, 0x29, 0x31, 0xc8, 0xf6, 0x19, 0xa2, 0xfe, 0x07, 0x80, 0xeb, 0x49,
	0x8b, 0x83, 0x6e, 0xc1, 0x1b, 0xdd, 0x9e, 0xda, 0x79, 0xd2, 0x69, 0x49, 0x6a, 0xa7, 0xd7, 0xd5,
	0x94, 0x76, 0xab, 0xdd, 0xd9, 0x6b, 0x2b, 0x5a, 0xbf, 0xfb, 0xbc, 0xdb, 0xfb, 0xbc, 0x5b, 0xfa,
	0x1f, 0xba, 0x03, 0xf9, 0x64, 0x48, 0xab, 0xb7, 0xb3, 0x23, 0xc9, 0x3d, 0x45, 0x52, 0x7b, 0x4a,
	0x09, 0xa0, 0x07, 0xf0, 0x7e, 0x32, 0x4e, 0xda, 0xfe, 0xac, 0xd3, 0xed, 0xec, 0xaa, 0x8a, 0xa4,
	0x76, 0xf6, 0xda, 0x5a, 0xab, 0xd7, 0x55, 0xa5, 0x96, 0x5a, 0x4a, 0xa3, 0x7b, 0xf0, 0xa3, 0x64,
	0x0f, 0xb5, 0xdd, 0x7a, 0xda, 0xed, 0xb4, 0xa4, 0x9d, 0x53, 0x70, 0xa6, 0x72, 0xe3, 0xed, 0x71,
	0xb9, 0xcc, 0x81, 0xfa, 0xb5, 0x44, 0x97, 0xfa, 0x8f, 0x00, 0xa2, 0x45, 0x6d, 0xd0, 0x26, 0xac,
	0xc4, 0xf0, 0xbb, 0xaa, 0xa4, 0xf6, 0x77, 0xb5, 0x7e, 0x77, 0xb7, 0xdd, 0xf6, 0x8b, 0xdb, 0x80,
	0x5c, 0x92, 0x9d, 0x59, 0x01, 0xaa, 0xc2, 0x8d, 0x24, 0xab, 0xa4, 0xb4, 0x9e, 0x76, 0xf6, 0xda,
	0xdb, 0xa5, 0x54, 0xe5, 0xfa, 0xdb, 0xe3, 0xf2, 0x07, 0x1c, 0xa8, 0x5f, 0x4d, 0xc0, 0x35, 0x7f,
	0x49, 0xc3, 0xab, 0x31, 0x4e, 0xc1, 0x3d, 0x0d, 0x69, 0x30, 0x17, 0x9c, 0x3c, 0xe8, 0xee, 0xbc,
	0xec, 0xef, 0xfc, 0x13, 0x54, 0xea, 0xcb, 0x40, 0xc3, 0x1d, 0x3d, 0x02, 0x30, 0xe3, 0x6f, 0x30,
	0xaa, 0xcd, 0x3b, 0xbd, 0xeb, 0x08, 0xab, 0xdc, 0x5d, 0x02, 0x19, 0x44, 0xe7, 0xb7, 0x5e, 0xff,
	0xf6, 0xd7, 0x4f, 0x29, 0xf1, 0x45, 0x03, 0xdd, 0x13, 0xc7, 0x04, 0x7b, 0x44, 0xfc, 0x3a, 0xba,
	0xa9, 0x82, 0xff, 0x4d, 0xb3, 0x8c, 0x6f, 0x62, 0x97, 0x54, 0x82, 0x7e, 0x00, 0x70, 0x35, 0x58,
	0xfa, 0x50, 0x1b, 0x71, 0x61, 0x97, 0xcf, 0x3f, 0x12, 0x2a, 0xff, 0x5f, 0xf8, 0xf5, 0xb4, 0xfd,
	0xab, 0x1d, 0xff, 0x88, 0x11, 0x7a, 0xd0, 0xbc, 0x08, 0x9d, 0xc7, 0xa0, 0x2e, 0x6f, 0xfd, 0xfa,
	0xe7, 0x26, 0x78, 0x21, 0x9a, 0x8e, 0x40, 0x0f, 0x30, 0x65, 0xb7, 0x54, 0xc1, 0xc6, 0xf4, 0x95,
	0xe3, 0x1d, 0x8a, 0xf1, 0x1b, 0xde, 0xe4, 0xa1, 0xe8, 0x1e, 0x9a, 0x22, 0xa5, 0xb6, 0xbb, 0xbf,
	0x9f, 0x63, 0xe9, 0x1f, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x27, 0x43, 0x5f, 0x97, 0x0b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	// Create a new notification. Can only be called by internal services using cluster auth.
	Create(ctx context.Context, in *CreateNotificationRequest, opts ...grpc.CallOption) (*CreateNotificationResponse, error)
	// List the notifications for a user or an organization.
	// When called with user credentials and empty receiver_ids, this will list
	// notifications for the current user and its organizations.
	List(ctx context.Context, in *ListNotificationsRequest, opts ...grpc.CallOption) (*ListNotificationsResponse, error)
	// Batch-update multiple notifications to the same status.
	UpdateStatus(ctx context.Context, in *UpdateNotificationStatusRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) Create(ctx context.Context, in *CreateNotificationRequest, opts ...grpc.CallOption) (*CreateNotificationResponse, error) {
	out := new(CreateNotificationResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.NotificationService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) List(ctx context.Context, in *ListNotificationsRequest, opts ...grpc.CallOption) (*ListNotificationsResponse, error) {
	out := new(ListNotificationsResponse)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.NotificationService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) UpdateStatus(ctx context.Context, in *UpdateNotificationStatusRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/ttn.lorawan.v3.NotificationService/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	// Create a new notification. Can only be called by internal services using cluster auth.
	Create(context.Context, *CreateNotificationRequest) (*CreateNotificationResponse, error)
	// List the notifications for a user or an organization.
	// When called with user credentials and empty receiver_ids, this will list
	// notifications for the current user and its organizations.
	List(context.Context, *ListNotificationsRequest) (*ListNotificationsResponse, error)
	// Batch-update multiple notifications to the same status.
	UpdateStatus(context.Context, *UpdateNotificationStatusRequest) (*types.Empty, error)
}

// UnimplementedNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServiceServer struct {
}

func (*UnimplementedNotificationServiceServer) Create(ctx context.Context, req *CreateNotificationRequest) (*CreateNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedNotificationServiceServer) List(ctx context.Context, req *ListNotificationsRequest) (*ListNotificationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedNotificationServiceServer) UpdateStatus(ctx context.Context, req *UpdateNotificationStatusRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.NotificationService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Create(ctx, req.(*CreateNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotificationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.NotificationService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).List(ctx, req.(*ListNotificationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNotificationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.lorawan.v3.NotificationService/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).UpdateStatus(ctx, req.(*UpdateNotificationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.lorawan.v3.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _NotificationService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _NotificationService_List_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _NotificationService_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/notification_service.proto",
}
