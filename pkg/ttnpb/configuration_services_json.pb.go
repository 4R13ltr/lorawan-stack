// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.3.0
// - protoc             v3.9.1
// source: lorawan-stack/api/configuration_services.proto

package ttnpb

import (
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the GetPhyVersionsResponse_VersionInfo message to JSON.
func (x *GetPhyVersionsResponse_VersionInfo) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.BandId != "" || s.HasField("band_id") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("band_id")
		s.WriteString(x.BandId)
	}
	if len(x.PhyVersions) > 0 || s.HasField("phy_versions") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("phy_versions")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.PhyVersions {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s)
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetPhyVersionsResponse_VersionInfo to JSON.
func (x GetPhyVersionsResponse_VersionInfo) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(&x)
}

// UnmarshalProtoJSON unmarshals the GetPhyVersionsResponse_VersionInfo message from JSON.
func (x *GetPhyVersionsResponse_VersionInfo) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "band_id", "bandId":
			s.AddField("band_id")
			x.BandId = s.ReadString()
		case "phy_versions", "phyVersions":
			s.AddField("phy_versions")
			s.ReadArray(func() {
				var v PHYVersion
				v.UnmarshalProtoJSON(s)
				x.PhyVersions = append(x.PhyVersions, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the GetPhyVersionsResponse_VersionInfo from JSON.
func (x *GetPhyVersionsResponse_VersionInfo) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetPhyVersionsResponse message to JSON.
func (x *GetPhyVersionsResponse) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.VersionInfo) > 0 || s.HasField("version_info") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("version_info")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.VersionInfo {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("version_info"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetPhyVersionsResponse to JSON.
func (x GetPhyVersionsResponse) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(&x)
}

// UnmarshalProtoJSON unmarshals the GetPhyVersionsResponse message from JSON.
func (x *GetPhyVersionsResponse) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "version_info", "versionInfo":
			s.AddField("version_info")
			s.ReadArray(func() {
				if s.ReadNil() {
					x.VersionInfo = append(x.VersionInfo, nil)
					return
				}
				v := &GetPhyVersionsResponse_VersionInfo{}
				v.UnmarshalProtoJSON(s.WithField("version_info", false))
				if s.Err() != nil {
					return
				}
				x.VersionInfo = append(x.VersionInfo, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the GetPhyVersionsResponse from JSON.
func (x *GetPhyVersionsResponse) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}
